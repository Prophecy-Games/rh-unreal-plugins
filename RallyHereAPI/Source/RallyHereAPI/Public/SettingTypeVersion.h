/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "SettingTypeVersion.generated.h"

/*
* FRHAPI_SettingTypeVersion
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_SettingTypeVersion : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* Are players allowed to set/update keys to this version of the setting type?  Does not affect getting or deleting existing settings. */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AllowUpdate_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AllowUpdate_IsSet{ false };
    bool& GetAllowUpdate() { return AllowUpdate_Optional; }
    const bool& GetAllowUpdate() const { return AllowUpdate_Optional; }
    const bool& GetAllowUpdate(const bool& DefaultValue) const { if (AllowUpdate_IsSet) return AllowUpdate_Optional; return DefaultValue; }
    bool GetAllowUpdate(bool& OutValue) const { if (AllowUpdate_IsSet) OutValue = AllowUpdate_Optional; return AllowUpdate_IsSet; }
    bool* GetAllowUpdateOrNull() { if (AllowUpdate_IsSet) return &AllowUpdate_Optional; return nullptr; }
    const bool* GetAllowUpdateOrNull() const { if (AllowUpdate_IsSet) return &AllowUpdate_Optional; return nullptr; }
    void SetAllowUpdate(bool NewValue) { AllowUpdate_Optional = NewValue; AllowUpdate_IsSet = true; }
    void ClearAllowUpdate() { AllowUpdate_Optional = true; AllowUpdate_IsSet = false; }
    bool IsAllowUpdateDefaultValue() const { return AllowUpdate_IsSet && AllowUpdate_Optional == true; }
    void SetAllowUpdateToDefault() { AllowUpdate_Optional = true; AllowUpdate_IsSet = true; }

    /* Regex that is used to verify keys at assignment time */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString KeyRegex_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool KeyRegex_IsSet{ false };
    FString& GetKeyRegex() { return KeyRegex_Optional; }
    const FString& GetKeyRegex() const { return KeyRegex_Optional; }
    const FString& GetKeyRegex(const FString& DefaultValue) const { if (KeyRegex_IsSet) return KeyRegex_Optional; return DefaultValue; }
    bool GetKeyRegex(FString& OutValue) const { if (KeyRegex_IsSet) OutValue = KeyRegex_Optional; return KeyRegex_IsSet; }
    FString* GetKeyRegexOrNull() { if (KeyRegex_IsSet) return &KeyRegex_Optional; return nullptr; }
    const FString* GetKeyRegexOrNull() const { if (KeyRegex_IsSet) return &KeyRegex_Optional; return nullptr; }
    void SetKeyRegex(FString NewValue) { KeyRegex_Optional = NewValue; KeyRegex_IsSet = true; }
    void ClearKeyRegex() { KeyRegex_Optional = TEXT("^.+$"); KeyRegex_IsSet = false; }
    bool IsKeyRegexDefaultValue() const { return KeyRegex_IsSet && KeyRegex_Optional == TEXT("^.+$"); }
    void SetKeyRegexToDefault() { KeyRegex_Optional = TEXT("^.+$"); KeyRegex_IsSet = true; }

    /* [jsonschema](https://json-schema.org/understanding-json-schema/index.html) that is used to verify values at assignment time */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FRHAPI_JsonObject ValueJsonschema{  };
    FRHAPI_JsonObject& GetValueJsonschema() { return ValueJsonschema; }
    const FRHAPI_JsonObject& GetValueJsonschema() const { return ValueJsonschema; }
    void SetValueJsonschema(FRHAPI_JsonObject NewValue) { ValueJsonschema = NewValue;  }
};
