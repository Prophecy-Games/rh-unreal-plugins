// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "CoreMinimal.h"
#include "RallyHereAPIAuthContext.h"
#include "RallyHereAPIHelpers.h"
#include "HTTPValidationError.h"
#include "HzApiErrorModel.h"
#include "PlayerRatingUpdateRequest.h"
#include "RankRequestResponse.h"
#include "RankUpdateResponse.h"
#include "TrueskillV1UpdateRequest.h"

namespace RallyHereAPI
{
using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

struct FRequest_GetAllPlayerUuidRating;
struct FResponse_GetAllPlayerUuidRating;
struct FRequest_GetPlayerUuidRating;
struct FResponse_GetPlayerUuidRating;
struct FRequest_UpdatePlayerUuidRating;
struct FResponse_UpdatePlayerUuidRating;
struct FRequest_UpdateRatingsTrueskillV1;
struct FResponse_UpdateRatingsTrueskillV1;

DECLARE_DELEGATE_OneParam(FDelegate_GetAllPlayerUuidRating, const FResponse_GetAllPlayerUuidRating&);
DECLARE_DELEGATE_OneParam(FDelegate_GetPlayerUuidRating, const FResponse_GetPlayerUuidRating&);
DECLARE_DELEGATE_OneParam(FDelegate_UpdatePlayerUuidRating, const FResponse_UpdatePlayerUuidRating&);
DECLARE_DELEGATE_OneParam(FDelegate_UpdateRatingsTrueskillV1, const FResponse_UpdateRatingsTrueskillV1&);

class RALLYHEREAPI_API FRankAPI : public FAPI
{
public:
    FRankAPI();
    virtual ~FRankAPI();

    FHttpRequestPtr GetAllPlayerUuidRating(const FRequest_GetAllPlayerUuidRating& Request, const FDelegate_GetAllPlayerUuidRating& Delegate = FDelegate_GetAllPlayerUuidRating());
    FHttpRequestPtr GetPlayerUuidRating(const FRequest_GetPlayerUuidRating& Request, const FDelegate_GetPlayerUuidRating& Delegate = FDelegate_GetPlayerUuidRating());
    FHttpRequestPtr UpdatePlayerUuidRating(const FRequest_UpdatePlayerUuidRating& Request, const FDelegate_UpdatePlayerUuidRating& Delegate = FDelegate_UpdatePlayerUuidRating());
    FHttpRequestPtr UpdateRatingsTrueskillV1(const FRequest_UpdateRatingsTrueskillV1& Request, const FDelegate_UpdateRatingsTrueskillV1& Delegate = FDelegate_UpdateRatingsTrueskillV1());

private:
    void OnGetAllPlayerUuidRatingResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetAllPlayerUuidRating Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry);
    void OnGetPlayerUuidRatingResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetPlayerUuidRating Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry);
    void OnUpdatePlayerUuidRatingResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_UpdatePlayerUuidRating Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry);
    void OnUpdateRatingsTrueskillV1Response(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_UpdateRatingsTrueskillV1 Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry);

};

/* Get All Player Uuid Rating
 *
 * Get a specific player&#39;s rank for a specific ranking type
*/
struct RALLYHEREAPI_API FRequest_GetAllPlayerUuidRating : public FRequest
{
    FRequest_GetAllPlayerUuidRating();
    virtual ~FRequest_GetAllPlayerUuidRating() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FString GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid PlayerUuid;
};

struct RALLYHEREAPI_API FResponse_GetAllPlayerUuidRating : public FResponse
{
    FResponse_GetAllPlayerUuidRating(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetAllPlayerUuidRating() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_RankRequestResponse Content;

};

struct RALLYHEREAPI_API Traits_GetAllPlayerUuidRating
{
    typedef FRequest_GetAllPlayerUuidRating Request;
    typedef FResponse_GetAllPlayerUuidRating Response;
    typedef FDelegate_GetAllPlayerUuidRating Delegate;
    typedef FRankAPI API;
    static FString Name;
	
    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate()) { return InAPI.GetAllPlayerUuidRating(InRequest, InDelegate); }
};

/* Get Player Uuid Rating
 *
 * Get a specific player&#39;s rank for a specific ranking type
*/
struct RALLYHEREAPI_API FRequest_GetPlayerUuidRating : public FRequest
{
    FRequest_GetPlayerUuidRating();
    virtual ~FRequest_GetPlayerUuidRating() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FString GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid PlayerUuid;
    int32 RankingTypeId = 0;
};

struct RALLYHEREAPI_API FResponse_GetPlayerUuidRating : public FResponse
{
    FResponse_GetPlayerUuidRating(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetPlayerUuidRating() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_RankRequestResponse Content;

};

struct RALLYHEREAPI_API Traits_GetPlayerUuidRating
{
    typedef FRequest_GetPlayerUuidRating Request;
    typedef FResponse_GetPlayerUuidRating Response;
    typedef FDelegate_GetPlayerUuidRating Delegate;
    typedef FRankAPI API;
    static FString Name;
	
    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate()) { return InAPI.GetPlayerUuidRating(InRequest, InDelegate); }
};

/* Update Player Uuid Rating
 *
 * Update a specific player&#39;s ratings to those that are provided. Ratings are taken as is
*/
struct RALLYHEREAPI_API FRequest_UpdatePlayerUuidRating : public FRequest
{
    FRequest_UpdatePlayerUuidRating();
    virtual ~FRequest_UpdatePlayerUuidRating() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FString GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FGuid PlayerUuid;
    int32 RankId = 0;
    FRHAPI_PlayerRatingUpdateRequest PlayerRatingUpdateRequest;
};

struct RALLYHEREAPI_API FResponse_UpdatePlayerUuidRating : public FResponse
{
    FResponse_UpdatePlayerUuidRating(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_UpdatePlayerUuidRating() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_RankUpdateResponse Content;

};

struct RALLYHEREAPI_API Traits_UpdatePlayerUuidRating
{
    typedef FRequest_UpdatePlayerUuidRating Request;
    typedef FResponse_UpdatePlayerUuidRating Response;
    typedef FDelegate_UpdatePlayerUuidRating Delegate;
    typedef FRankAPI API;
    static FString Name;
	
    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate()) { return InAPI.UpdatePlayerUuidRating(InRequest, InDelegate); }
};

/* Update Ratings Trueskill V1
 *
 * Run Trueskill V1 rating update on players and persist their new ratings
*/
struct RALLYHEREAPI_API FRequest_UpdateRatingsTrueskillV1 : public FRequest
{
    FRequest_UpdateRatingsTrueskillV1();
    virtual ~FRequest_UpdateRatingsTrueskillV1() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FString GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
    FRHAPI_TrueskillV1UpdateRequest TrueskillV1UpdateRequest;
};

struct RALLYHEREAPI_API FResponse_UpdateRatingsTrueskillV1 : public FResponse
{
    FResponse_UpdateRatingsTrueskillV1(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_UpdateRatingsTrueskillV1() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    FRHAPI_RankUpdateResponse Content;

};

struct RALLYHEREAPI_API Traits_UpdateRatingsTrueskillV1
{
    typedef FRequest_UpdateRatingsTrueskillV1 Request;
    typedef FResponse_UpdateRatingsTrueskillV1 Response;
    typedef FDelegate_UpdateRatingsTrueskillV1 Delegate;
    typedef FRankAPI API;
    static FString Name;
	
    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate()) { return InAPI.UpdateRatingsTrueskillV1(InRequest, InDelegate); }
};


}
