/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "Match.generated.h"

/*
* FRHAPI_Match
*
* Info about the current match in the instance
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_Match : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* Unique ID */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString MatchId{  };
    FString& GetMatchId() { return MatchId; }
    const FString& GetMatchId() const { return MatchId; }
    void SetMatchId(FString NewValue) { MatchId = NewValue;  }

    /* Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FDateTime Created{  };
    FDateTime& GetCreated() { return Created; }
    const FDateTime& GetCreated() const { return Created; }
    void SetCreated(FDateTime NewValue) { Created = NewValue;  }

    /* instance-defined custom data */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TMap<FString, FString> CustomData_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CustomData_IsSet{ false };
    TMap<FString, FString>& GetCustomData() { return CustomData_Optional; }
    const TMap<FString, FString>& GetCustomData() const { return CustomData_Optional; }
    const TMap<FString, FString>& GetCustomData(const TMap<FString, FString>& DefaultValue) const { if (CustomData_IsSet) return CustomData_Optional; return DefaultValue; }
    bool GetCustomData(TMap<FString, FString>& OutValue) const { if (CustomData_IsSet) OutValue = CustomData_Optional; return CustomData_IsSet; }
    TMap<FString, FString>* GetCustomDataOrNull() { if (CustomData_IsSet) return &CustomData_Optional; return nullptr; }
    const TMap<FString, FString>* GetCustomDataOrNull() const { if (CustomData_IsSet) return &CustomData_Optional; return nullptr; }
    void SetCustomData(TMap<FString, FString> NewValue) { CustomData_Optional = NewValue; CustomData_IsSet = true; }
    void ClearCustomData() { CustomData_IsSet = false; }

    /* List of tickets that were assigned to this match if created by matchmaking */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FString> TicketIds_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool TicketIds_IsSet{ false };
    TArray<FString>& GetTicketIds() { return TicketIds_Optional; }
    const TArray<FString>& GetTicketIds() const { return TicketIds_Optional; }
    const TArray<FString>& GetTicketIds(const TArray<FString>& DefaultValue) const { if (TicketIds_IsSet) return TicketIds_Optional; return DefaultValue; }
    bool GetTicketIds(TArray<FString>& OutValue) const { if (TicketIds_IsSet) OutValue = TicketIds_Optional; return TicketIds_IsSet; }
    TArray<FString>* GetTicketIdsOrNull() { if (TicketIds_IsSet) return &TicketIds_Optional; return nullptr; }
    const TArray<FString>* GetTicketIdsOrNull() const { if (TicketIds_IsSet) return &TicketIds_Optional; return nullptr; }
    void SetTicketIds(TArray<FString> NewValue) { TicketIds_Optional = NewValue; TicketIds_IsSet = true; }
    void ClearTicketIds() { TicketIds_IsSet = false; }
};
