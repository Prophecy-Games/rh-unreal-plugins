/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "SessionPlayerStatus.h"
#include "SessionPlayerUpdateRequest.generated.h"

/*
* FRHAPI_SessionPlayerUpdateRequest
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_SessionPlayerUpdateRequest : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* Status that the player would like after the request is complete.  Note that some join operations may promote the player from `member` to `leader` */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_SessionPlayerStatus Status_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Status_IsSet{ false };
    ERHAPI_SessionPlayerStatus& GetStatus() { return Status_Optional; }
    const ERHAPI_SessionPlayerStatus& GetStatus() const { return Status_Optional; }
    const ERHAPI_SessionPlayerStatus& GetStatus(const ERHAPI_SessionPlayerStatus& DefaultValue) const { if (Status_IsSet) return Status_Optional; return DefaultValue; }
    bool GetStatus(ERHAPI_SessionPlayerStatus& OutValue) const { if (Status_IsSet) OutValue = Status_Optional; return Status_IsSet; }
    ERHAPI_SessionPlayerStatus* GetStatusOrNull() { if (Status_IsSet) return &Status_Optional; return nullptr; }
    const ERHAPI_SessionPlayerStatus* GetStatusOrNull() const { if (Status_IsSet) return &Status_Optional; return nullptr; }
    void SetStatus(ERHAPI_SessionPlayerStatus NewValue) { Status_Optional = NewValue; Status_IsSet = true; }
    void ClearStatus() { Status_IsSet = false; }

    /* Which team the player should be on */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 TeamId{ 0 };
    int32& GetTeamId() { return TeamId; }
    const int32& GetTeamId() const { return TeamId; }
    void SetTeamId(int32 NewValue) { TeamId = NewValue;  }
    bool IsTeamIdDefaultValue() const { return TeamId == 0; }
    void SetTeamIdToDefault() { TeamId = 0;  }

    /* player-defined custom data */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TMap<FString, FString> CustomData_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CustomData_IsSet{ false };
    TMap<FString, FString>& GetCustomData() { return CustomData_Optional; }
    const TMap<FString, FString>& GetCustomData() const { return CustomData_Optional; }
    const TMap<FString, FString>& GetCustomData(const TMap<FString, FString>& DefaultValue) const { if (CustomData_IsSet) return CustomData_Optional; return DefaultValue; }
    bool GetCustomData(TMap<FString, FString>& OutValue) const { if (CustomData_IsSet) OutValue = CustomData_Optional; return CustomData_IsSet; }
    TMap<FString, FString>* GetCustomDataOrNull() { if (CustomData_IsSet) return &CustomData_Optional; return nullptr; }
    const TMap<FString, FString>* GetCustomDataOrNull() const { if (CustomData_IsSet) return &CustomData_Optional; return nullptr; }
    void SetCustomData(TMap<FString, FString> NewValue) { CustomData_Optional = NewValue; CustomData_IsSet = true; }
    void ClearCustomData() { CustomData_IsSet = false; }
};
