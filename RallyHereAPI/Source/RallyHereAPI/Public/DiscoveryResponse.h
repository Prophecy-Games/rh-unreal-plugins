/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "DiscoveryResponse.generated.h"

/*
* FRHAPI_DiscoveryResponse
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_DiscoveryResponse : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FString> Addresses{  };
    TArray<FString>& GetAddresses() { return Addresses; }
    const TArray<FString>& GetAddresses() const { return Addresses; }
    void SetAddresses(TArray<FString> NewValue) { Addresses = NewValue;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString ServerStatus_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ServerStatus_IsSet{ false };
    FString& GetServerStatus() { return ServerStatus_Optional; }
    const FString& GetServerStatus() const { return ServerStatus_Optional; }
    const FString& GetServerStatus(const FString& DefaultValue) const { if (ServerStatus_IsSet) return ServerStatus_Optional; return DefaultValue; }
    bool GetServerStatus(FString& OutValue) const { if (ServerStatus_IsSet) OutValue = ServerStatus_Optional; return ServerStatus_IsSet; }
    FString* GetServerStatusOrNull() { if (ServerStatus_IsSet) return &ServerStatus_Optional; return nullptr; }
    const FString* GetServerStatusOrNull() const { if (ServerStatus_IsSet) return &ServerStatus_Optional; return nullptr; }
    void SetServerStatus(FString NewValue) { ServerStatus_Optional = NewValue; ServerStatus_IsSet = true; }
    void ClearServerStatus() { ServerStatus_Optional = TEXT("unknown"); ServerStatus_IsSet = false; }
    bool IsServerStatusDefaultValue() const { return ServerStatus_IsSet && ServerStatus_Optional == TEXT("unknown"); }
    void SetServerStatusToDefault() { ServerStatus_Optional = TEXT("unknown"); ServerStatus_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString CommandLineArgs_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CommandLineArgs_IsSet{ false };
    FString& GetCommandLineArgs() { return CommandLineArgs_Optional; }
    const FString& GetCommandLineArgs() const { return CommandLineArgs_Optional; }
    const FString& GetCommandLineArgs(const FString& DefaultValue) const { if (CommandLineArgs_IsSet) return CommandLineArgs_Optional; return DefaultValue; }
    bool GetCommandLineArgs(FString& OutValue) const { if (CommandLineArgs_IsSet) OutValue = CommandLineArgs_Optional; return CommandLineArgs_IsSet; }
    FString* GetCommandLineArgsOrNull() { if (CommandLineArgs_IsSet) return &CommandLineArgs_Optional; return nullptr; }
    const FString* GetCommandLineArgsOrNull() const { if (CommandLineArgs_IsSet) return &CommandLineArgs_Optional; return nullptr; }
    void SetCommandLineArgs(FString NewValue) { CommandLineArgs_Optional = NewValue; CommandLineArgs_IsSet = true; }
    void ClearCommandLineArgs() { CommandLineArgs_Optional = TEXT(" "); CommandLineArgs_IsSet = false; }
    bool IsCommandLineArgsDefaultValue() const { return CommandLineArgs_IsSet && CommandLineArgs_Optional == TEXT(" "); }
    void SetCommandLineArgsToDefault() { CommandLineArgs_Optional = TEXT(" "); CommandLineArgs_IsSet = true; }
};
