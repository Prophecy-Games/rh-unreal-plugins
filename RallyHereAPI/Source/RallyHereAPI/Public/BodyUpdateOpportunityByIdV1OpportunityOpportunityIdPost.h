/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "OpportunityAbortReason.h"
#include "OpportunityState.h"
#include "BodyUpdateOpportunityByIdV1OpportunityOpportunityIdPost.generated.h"

/*
* FRHAPI_BodyUpdateOpportunityByIdV1OpportunityOpportunityIdPost
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_BodyUpdateOpportunityByIdV1OpportunityOpportunityIdPost : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_OpportunityState State{  };
    ERHAPI_OpportunityState& GetState() { return State; }
    const ERHAPI_OpportunityState& GetState() const { return State; }
    void SetState(ERHAPI_OpportunityState NewValue) { State = NewValue;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_OpportunityAbortReason AbortReason_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AbortReason_IsSet{ false };
    ERHAPI_OpportunityAbortReason& GetAbortReason() { return AbortReason_Optional; }
    const ERHAPI_OpportunityAbortReason& GetAbortReason() const { return AbortReason_Optional; }
    const ERHAPI_OpportunityAbortReason& GetAbortReason(const ERHAPI_OpportunityAbortReason& DefaultValue) const { if (AbortReason_IsSet) return AbortReason_Optional; return DefaultValue; }
    bool GetAbortReason(ERHAPI_OpportunityAbortReason& OutValue) const { if (AbortReason_IsSet) OutValue = AbortReason_Optional; return AbortReason_IsSet; }
    ERHAPI_OpportunityAbortReason* GetAbortReasonOrNull() { if (AbortReason_IsSet) return &AbortReason_Optional; return nullptr; }
    const ERHAPI_OpportunityAbortReason* GetAbortReasonOrNull() const { if (AbortReason_IsSet) return &AbortReason_Optional; return nullptr; }
    void SetAbortReason(ERHAPI_OpportunityAbortReason NewValue) { AbortReason_Optional = NewValue; AbortReason_IsSet = true; }
    void ClearAbortReason() { AbortReason_IsSet = false; }

    /* Number of seconds into the video when the abort happened */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 AbortSeconds_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AbortSeconds_IsSet{ false };
    int32& GetAbortSeconds() { return AbortSeconds_Optional; }
    const int32& GetAbortSeconds() const { return AbortSeconds_Optional; }
    const int32& GetAbortSeconds(const int32& DefaultValue) const { if (AbortSeconds_IsSet) return AbortSeconds_Optional; return DefaultValue; }
    bool GetAbortSeconds(int32& OutValue) const { if (AbortSeconds_IsSet) OutValue = AbortSeconds_Optional; return AbortSeconds_IsSet; }
    int32* GetAbortSecondsOrNull() { if (AbortSeconds_IsSet) return &AbortSeconds_Optional; return nullptr; }
    const int32* GetAbortSecondsOrNull() const { if (AbortSeconds_IsSet) return &AbortSeconds_Optional; return nullptr; }
    void SetAbortSeconds(int32 NewValue) { AbortSeconds_Optional = NewValue; AbortSeconds_IsSet = true; }
    void ClearAbortSeconds() { AbortSeconds_Optional = 0; AbortSeconds_IsSet = false; }
    bool IsAbortSecondsDefaultValue() const { return AbortSeconds_IsSet && AbortSeconds_Optional == 0; }
    void SetAbortSecondsToDefault() { AbortSeconds_Optional = 0; AbortSeconds_IsSet = true; }
};
