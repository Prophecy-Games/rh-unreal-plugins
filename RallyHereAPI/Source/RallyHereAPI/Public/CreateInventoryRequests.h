/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "CreateInventoryRequest.h"
#include "Source.h"
#include "CreateInventoryRequests.generated.h"

/*
* FRHAPI_CreateInventoryRequests
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_CreateInventoryRequests : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_Source Source_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Source_IsSet{ false };
    ERHAPI_Source& GetSource() { return Source_Optional; }
    const ERHAPI_Source& GetSource() const { return Source_Optional; }
    const ERHAPI_Source& GetSource(const ERHAPI_Source& DefaultValue) const { if (Source_IsSet) return Source_Optional; return DefaultValue; }
    bool GetSource(ERHAPI_Source& OutValue) const { if (Source_IsSet) OutValue = Source_Optional; return Source_IsSet; }
    ERHAPI_Source* GetSourceOrNull() { if (Source_IsSet) return &Source_Optional; return nullptr; }
    const ERHAPI_Source* GetSourceOrNull() const { if (Source_IsSet) return &Source_Optional; return nullptr; }
    void SetSource(ERHAPI_Source NewValue) { Source_Optional = NewValue; Source_IsSet = true; }
    void ClearSource() { Source_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FGuid ClientOrderRefId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ClientOrderRefId_IsSet{ false };
    FGuid& GetClientOrderRefId() { return ClientOrderRefId_Optional; }
    const FGuid& GetClientOrderRefId() const { return ClientOrderRefId_Optional; }
    const FGuid& GetClientOrderRefId(const FGuid& DefaultValue) const { if (ClientOrderRefId_IsSet) return ClientOrderRefId_Optional; return DefaultValue; }
    bool GetClientOrderRefId(FGuid& OutValue) const { if (ClientOrderRefId_IsSet) OutValue = ClientOrderRefId_Optional; return ClientOrderRefId_IsSet; }
    FGuid* GetClientOrderRefIdOrNull() { if (ClientOrderRefId_IsSet) return &ClientOrderRefId_Optional; return nullptr; }
    const FGuid* GetClientOrderRefIdOrNull() const { if (ClientOrderRefId_IsSet) return &ClientOrderRefId_Optional; return nullptr; }
    void SetClientOrderRefId(FGuid NewValue) { ClientOrderRefId_Optional = NewValue; ClientOrderRefId_IsSet = true; }
    void ClearClientOrderRefId() { ClientOrderRefId_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FRHAPI_CreateInventoryRequest> Inventory{  };
    TArray<FRHAPI_CreateInventoryRequest>& GetInventory() { return Inventory; }
    const TArray<FRHAPI_CreateInventoryRequest>& GetInventory() const { return Inventory; }
    void SetInventory(TArray<FRHAPI_CreateInventoryRequest> NewValue) { Inventory = NewValue;  }
};
