/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "ClientVisibleSettings.generated.h"

/*
* FRHAPI_ClientVisibleSettings
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_ClientVisibleSettings : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* How frequently the client should tell this service that it's online. */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 SelfPingIntervalSeconds_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool SelfPingIntervalSeconds_IsSet{ false };
    int32& GetSelfPingIntervalSeconds() { return SelfPingIntervalSeconds_Optional; }
    const int32& GetSelfPingIntervalSeconds() const { return SelfPingIntervalSeconds_Optional; }
    const int32& GetSelfPingIntervalSeconds(const int32& DefaultValue) const { if (SelfPingIntervalSeconds_IsSet) return SelfPingIntervalSeconds_Optional; return DefaultValue; }
    bool GetSelfPingIntervalSeconds(int32& OutValue) const { if (SelfPingIntervalSeconds_IsSet) OutValue = SelfPingIntervalSeconds_Optional; return SelfPingIntervalSeconds_IsSet; }
    int32* GetSelfPingIntervalSecondsOrNull() { if (SelfPingIntervalSeconds_IsSet) return &SelfPingIntervalSeconds_Optional; return nullptr; }
    const int32* GetSelfPingIntervalSecondsOrNull() const { if (SelfPingIntervalSeconds_IsSet) return &SelfPingIntervalSeconds_Optional; return nullptr; }
    void SetSelfPingIntervalSeconds(int32 NewValue) { SelfPingIntervalSeconds_Optional = NewValue; SelfPingIntervalSeconds_IsSet = true; }
    void ClearSelfPingIntervalSeconds() { SelfPingIntervalSeconds_Optional = 30; SelfPingIntervalSeconds_IsSet = false; }
    bool IsSelfPingIntervalSecondsDefaultValue() const { return SelfPingIntervalSeconds_IsSet && SelfPingIntervalSeconds_Optional == 30; }
    void SetSelfPingIntervalSecondsToDefault() { SelfPingIntervalSeconds_Optional = 30; SelfPingIntervalSeconds_IsSet = true; }

    /* If a client hasn't said that it's online within this time period, it will be treated as offline when others query its presence. */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 LastSeenAgeConsideredOfflineSeconds_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool LastSeenAgeConsideredOfflineSeconds_IsSet{ false };
    int32& GetLastSeenAgeConsideredOfflineSeconds() { return LastSeenAgeConsideredOfflineSeconds_Optional; }
    const int32& GetLastSeenAgeConsideredOfflineSeconds() const { return LastSeenAgeConsideredOfflineSeconds_Optional; }
    const int32& GetLastSeenAgeConsideredOfflineSeconds(const int32& DefaultValue) const { if (LastSeenAgeConsideredOfflineSeconds_IsSet) return LastSeenAgeConsideredOfflineSeconds_Optional; return DefaultValue; }
    bool GetLastSeenAgeConsideredOfflineSeconds(int32& OutValue) const { if (LastSeenAgeConsideredOfflineSeconds_IsSet) OutValue = LastSeenAgeConsideredOfflineSeconds_Optional; return LastSeenAgeConsideredOfflineSeconds_IsSet; }
    int32* GetLastSeenAgeConsideredOfflineSecondsOrNull() { if (LastSeenAgeConsideredOfflineSeconds_IsSet) return &LastSeenAgeConsideredOfflineSeconds_Optional; return nullptr; }
    const int32* GetLastSeenAgeConsideredOfflineSecondsOrNull() const { if (LastSeenAgeConsideredOfflineSeconds_IsSet) return &LastSeenAgeConsideredOfflineSeconds_Optional; return nullptr; }
    void SetLastSeenAgeConsideredOfflineSeconds(int32 NewValue) { LastSeenAgeConsideredOfflineSeconds_Optional = NewValue; LastSeenAgeConsideredOfflineSeconds_IsSet = true; }
    void ClearLastSeenAgeConsideredOfflineSeconds() { LastSeenAgeConsideredOfflineSeconds_Optional = 60; LastSeenAgeConsideredOfflineSeconds_IsSet = false; }
    bool IsLastSeenAgeConsideredOfflineSecondsDefaultValue() const { return LastSeenAgeConsideredOfflineSeconds_IsSet && LastSeenAgeConsideredOfflineSeconds_Optional == 60; }
    void SetLastSeenAgeConsideredOfflineSecondsToDefault() { LastSeenAgeConsideredOfflineSeconds_Optional = 60; LastSeenAgeConsideredOfflineSeconds_IsSet = true; }
};
