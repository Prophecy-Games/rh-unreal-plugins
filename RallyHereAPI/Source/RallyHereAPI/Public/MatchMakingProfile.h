// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "ProfileJoinMode.h"
#include "MatchMakingProfile.generated.h"

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_MatchMakingProfile : public FRHAPI_Model
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief ID of the matchmaking profile to join */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString ProfileId{  };
    /** @brief Gets the value of ProfileId */
    FString& GetProfileId() { return ProfileId; }
    /** @brief Gets the value of ProfileId */
    const FString& GetProfileId() const { return ProfileId; }
    /** @brief Sets the value of ProfileId */
    void SetProfileId(FString NewValue) { ProfileId = NewValue;  }

    /** @brief What mode to set on the matchmaking profile (normal, backfill etc) */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_ProfileJoinMode JoinMode_Optional{  };
    /** @brief true if JoinMode_Optional has been set to a value */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool JoinMode_IsSet{ false };
    /** @brief Gets the value of JoinMode_Optional, regardless of it having been set */
    ERHAPI_ProfileJoinMode& GetJoinMode() { return JoinMode_Optional; }
    /** @brief Gets the value of JoinMode_Optional, regardless of it having been set */
    const ERHAPI_ProfileJoinMode& GetJoinMode() const { return JoinMode_Optional; }
    /** @brief Gets the value of JoinMode_Optional, if it has been set, otherwise it returns DefaultValue */
    const ERHAPI_ProfileJoinMode& GetJoinMode(const ERHAPI_ProfileJoinMode& DefaultValue) const { if (JoinMode_IsSet) return JoinMode_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of JoinMode_Optional and returns true if it has been set, otherwise returns false */
    bool GetJoinMode(ERHAPI_ProfileJoinMode& OutValue) const { if (JoinMode_IsSet) OutValue = JoinMode_Optional; return JoinMode_IsSet; }
    /** @brief Returns a pointer to JoinMode_Optional, if it has been set, otherwise returns nullptr */
    ERHAPI_ProfileJoinMode* GetJoinModeOrNull() { if (JoinMode_IsSet) return &JoinMode_Optional; return nullptr; }
    /** @brief Returns a pointer to JoinMode_Optional, if it has been set, otherwise returns nullptr */
    const ERHAPI_ProfileJoinMode* GetJoinModeOrNull() const { if (JoinMode_IsSet) return &JoinMode_Optional; return nullptr; }
    /** @brief Sets the value of JoinMode_Optional and also sets JoinMode_IsSet to true */
    void SetJoinMode(ERHAPI_ProfileJoinMode NewValue) { JoinMode_Optional = NewValue; JoinMode_IsSet = true; }
     /** @brief Clears the value of JoinMode_Optional and sets JoinMode_IsSet to false */
    void ClearJoinMode() { JoinMode_IsSet = false; }

    /** @brief Which instance template to use when launching a match in this profile */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FGuid InstanceLaunchTemplateId{  };
    /** @brief Gets the value of InstanceLaunchTemplateId */
    FGuid& GetInstanceLaunchTemplateId() { return InstanceLaunchTemplateId; }
    /** @brief Gets the value of InstanceLaunchTemplateId */
    const FGuid& GetInstanceLaunchTemplateId() const { return InstanceLaunchTemplateId; }
    /** @brief Sets the value of InstanceLaunchTemplateId */
    void SetInstanceLaunchTemplateId(FGuid NewValue) { InstanceLaunchTemplateId = NewValue;  }
};
