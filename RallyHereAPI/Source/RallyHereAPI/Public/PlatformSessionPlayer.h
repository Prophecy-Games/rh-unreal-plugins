/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "PlatformSessionPlayer.generated.h"

/*
* FRHAPI_PlatformSessionPlayer
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PlatformSessionPlayer : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 PlayerId{ 0 };
    int32& GetPlayerId() { return PlayerId; }
    const int32& GetPlayerId() const { return PlayerId; }
    void SetPlayerId(int32 NewValue) { PlayerId = NewValue;  }
    bool IsPlayerIdDefaultValue() const { return PlayerId == 0; }
    void SetPlayerIdToDefault() { PlayerId = 0;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FGuid PlayerUuid{  };
    FGuid& GetPlayerUuid() { return PlayerUuid; }
    const FGuid& GetPlayerUuid() const { return PlayerUuid; }
    void SetPlayerUuid(FGuid NewValue) { PlayerUuid = NewValue;  }

    /* Is this player the leader of the platform session?  When setting up the parent session, if all players are from the same platform session, leadership is coordinated */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Leader_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Leader_IsSet{ false };
    bool& GetLeader() { return Leader_Optional; }
    const bool& GetLeader() const { return Leader_Optional; }
    const bool& GetLeader(const bool& DefaultValue) const { if (Leader_IsSet) return Leader_Optional; return DefaultValue; }
    bool GetLeader(bool& OutValue) const { if (Leader_IsSet) OutValue = Leader_Optional; return Leader_IsSet; }
    bool* GetLeaderOrNull() { if (Leader_IsSet) return &Leader_Optional; return nullptr; }
    const bool* GetLeaderOrNull() const { if (Leader_IsSet) return &Leader_Optional; return nullptr; }
    void SetLeader(bool NewValue) { Leader_Optional = NewValue; Leader_IsSet = true; }
    void ClearLeader() { Leader_Optional = false; Leader_IsSet = false; }
    bool IsLeaderDefaultValue() const { return Leader_IsSet && Leader_Optional == false; }
    void SetLeaderToDefault() { Leader_Optional = false; Leader_IsSet = true; }
};
