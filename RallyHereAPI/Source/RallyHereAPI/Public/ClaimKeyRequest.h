/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "ClaimKeyRequest.generated.h"

/*
* FRHAPI_ClaimKeyRequest
*
* Attempt to claim a Key Claim from a Marketing Campaign.
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_ClaimKeyRequest : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString ExternalKeyType_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ExternalKeyType_IsSet{ false };
    FString& GetExternalKeyType() { return ExternalKeyType_Optional; }
    const FString& GetExternalKeyType() const { return ExternalKeyType_Optional; }
    const FString& GetExternalKeyType(const FString& DefaultValue) const { if (ExternalKeyType_IsSet) return ExternalKeyType_Optional; return DefaultValue; }
    bool GetExternalKeyType(FString& OutValue) const { if (ExternalKeyType_IsSet) OutValue = ExternalKeyType_Optional; return ExternalKeyType_IsSet; }
    FString* GetExternalKeyTypeOrNull() { if (ExternalKeyType_IsSet) return &ExternalKeyType_Optional; return nullptr; }
    const FString* GetExternalKeyTypeOrNull() const { if (ExternalKeyType_IsSet) return &ExternalKeyType_Optional; return nullptr; }
    void SetExternalKeyType(FString NewValue) { ExternalKeyType_Optional = NewValue; ExternalKeyType_IsSet = true; }
    void ClearExternalKeyType() { ExternalKeyType_Optional = TEXT("Type of the External Key"); ExternalKeyType_IsSet = false; }
    bool IsExternalKeyTypeDefaultValue() const { return ExternalKeyType_IsSet && ExternalKeyType_Optional == TEXT("Type of the External Key"); }
    void SetExternalKeyTypeToDefault() { ExternalKeyType_Optional = TEXT("Type of the External Key"); ExternalKeyType_IsSet = true; }
};
