/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "ClientType.h"
#include "Platform.h"
#include "PlatformEntitlement.h"
#include "PlatformRegion.h"
#include "PlatformEntitlementProcessResult.generated.h"

/*
* FRHAPI_PlatformEntitlementProcessResult
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PlatformEntitlementProcessResult : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* unique id to allow tracking the request */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString RequestId{  };
    FString& GetRequestId() { return RequestId; }
    const FString& GetRequestId() const { return RequestId; }
    void SetRequestId(FString NewValue) { RequestId = NewValue;  }

    /* client type this purchase was made on */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_ClientType ClientType{  };
    ERHAPI_ClientType& GetClientType() { return ClientType; }
    const ERHAPI_ClientType& GetClientType() const { return ClientType; }
    void SetClientType(ERHAPI_ClientType NewValue) { ClientType = NewValue;  }

    /* unique id for this transaction on the platform */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString TransactionId{  };
    FString& GetTransactionId() { return TransactionId; }
    const FString& GetTransactionId() const { return TransactionId; }
    void SetTransactionId(FString NewValue) { TransactionId = NewValue;  }

    /* region this purchase was made in */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_PlatformRegion PlatformRegion{  };
    ERHAPI_PlatformRegion& GetPlatformRegion() { return PlatformRegion; }
    const ERHAPI_PlatformRegion& GetPlatformRegion() const { return PlatformRegion; }
    void SetPlatformRegion(ERHAPI_PlatformRegion NewValue) { PlatformRegion = NewValue;  }

    /* status of this result */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString Status_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Status_IsSet{ false };
    FString& GetStatus() { return Status_Optional; }
    const FString& GetStatus() const { return Status_Optional; }
    const FString& GetStatus(const FString& DefaultValue) const { if (Status_IsSet) return Status_Optional; return DefaultValue; }
    bool GetStatus(FString& OutValue) const { if (Status_IsSet) OutValue = Status_Optional; return Status_IsSet; }
    FString* GetStatusOrNull() { if (Status_IsSet) return &Status_Optional; return nullptr; }
    const FString* GetStatusOrNull() const { if (Status_IsSet) return &Status_Optional; return nullptr; }
    void SetStatus(FString NewValue) { Status_Optional = NewValue; Status_IsSet = true; }
    void ClearStatus() { Status_Optional = TEXT("SUBMITTED"); Status_IsSet = false; }
    bool IsStatusDefaultValue() const { return Status_IsSet && Status_Optional == TEXT("SUBMITTED"); }
    void SetStatusToDefault() { Status_Optional = TEXT("SUBMITTED"); Status_IsSet = true; }

    /* Client entitlements that have been processed */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FRHAPI_PlatformEntitlement> ClientEntitlements_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ClientEntitlements_IsSet{ false };
    TArray<FRHAPI_PlatformEntitlement>& GetClientEntitlements() { return ClientEntitlements_Optional; }
    const TArray<FRHAPI_PlatformEntitlement>& GetClientEntitlements() const { return ClientEntitlements_Optional; }
    const TArray<FRHAPI_PlatformEntitlement>& GetClientEntitlements(const TArray<FRHAPI_PlatformEntitlement>& DefaultValue) const { if (ClientEntitlements_IsSet) return ClientEntitlements_Optional; return DefaultValue; }
    bool GetClientEntitlements(TArray<FRHAPI_PlatformEntitlement>& OutValue) const { if (ClientEntitlements_IsSet) OutValue = ClientEntitlements_Optional; return ClientEntitlements_IsSet; }
    TArray<FRHAPI_PlatformEntitlement>* GetClientEntitlementsOrNull() { if (ClientEntitlements_IsSet) return &ClientEntitlements_Optional; return nullptr; }
    const TArray<FRHAPI_PlatformEntitlement>* GetClientEntitlementsOrNull() const { if (ClientEntitlements_IsSet) return &ClientEntitlements_Optional; return nullptr; }
    void SetClientEntitlements(TArray<FRHAPI_PlatformEntitlement> NewValue) { ClientEntitlements_Optional = NewValue; ClientEntitlements_IsSet = true; }
    void ClearClientEntitlements() { ClientEntitlements_IsSet = false; }

    /* Server entitlements that have been processed */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FRHAPI_PlatformEntitlement> ServerEntitlements_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ServerEntitlements_IsSet{ false };
    TArray<FRHAPI_PlatformEntitlement>& GetServerEntitlements() { return ServerEntitlements_Optional; }
    const TArray<FRHAPI_PlatformEntitlement>& GetServerEntitlements() const { return ServerEntitlements_Optional; }
    const TArray<FRHAPI_PlatformEntitlement>& GetServerEntitlements(const TArray<FRHAPI_PlatformEntitlement>& DefaultValue) const { if (ServerEntitlements_IsSet) return ServerEntitlements_Optional; return DefaultValue; }
    bool GetServerEntitlements(TArray<FRHAPI_PlatformEntitlement>& OutValue) const { if (ServerEntitlements_IsSet) OutValue = ServerEntitlements_Optional; return ServerEntitlements_IsSet; }
    TArray<FRHAPI_PlatformEntitlement>* GetServerEntitlementsOrNull() { if (ServerEntitlements_IsSet) return &ServerEntitlements_Optional; return nullptr; }
    const TArray<FRHAPI_PlatformEntitlement>* GetServerEntitlementsOrNull() const { if (ServerEntitlements_IsSet) return &ServerEntitlements_Optional; return nullptr; }
    void SetServerEntitlements(TArray<FRHAPI_PlatformEntitlement> NewValue) { ServerEntitlements_Optional = NewValue; ServerEntitlements_IsSet = true; }
    void ClearServerEntitlements() { ServerEntitlements_IsSet = false; }

    /* Platform these transactions were processed on */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_Platform PlatformId{  };
    ERHAPI_Platform& GetPlatformId() { return PlatformId; }
    const ERHAPI_Platform& GetPlatformId() const { return PlatformId; }
    void SetPlatformId(ERHAPI_Platform NewValue) { PlatformId = NewValue;  }

    /* Unique identifier for the platform user that processed this entitlement */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString PlatformUserId{  };
    FString& GetPlatformUserId() { return PlatformUserId; }
    const FString& GetPlatformUserId() const { return PlatformUserId; }
    void SetPlatformUserId(FString NewValue) { PlatformUserId = NewValue;  }

    /* True if the server entitlements were skipped */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool SkippedServerEntitlements_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool SkippedServerEntitlements_IsSet{ false };
    bool& GetSkippedServerEntitlements() { return SkippedServerEntitlements_Optional; }
    const bool& GetSkippedServerEntitlements() const { return SkippedServerEntitlements_Optional; }
    const bool& GetSkippedServerEntitlements(const bool& DefaultValue) const { if (SkippedServerEntitlements_IsSet) return SkippedServerEntitlements_Optional; return DefaultValue; }
    bool GetSkippedServerEntitlements(bool& OutValue) const { if (SkippedServerEntitlements_IsSet) OutValue = SkippedServerEntitlements_Optional; return SkippedServerEntitlements_IsSet; }
    bool* GetSkippedServerEntitlementsOrNull() { if (SkippedServerEntitlements_IsSet) return &SkippedServerEntitlements_Optional; return nullptr; }
    const bool* GetSkippedServerEntitlementsOrNull() const { if (SkippedServerEntitlements_IsSet) return &SkippedServerEntitlements_Optional; return nullptr; }
    void SetSkippedServerEntitlements(bool NewValue) { SkippedServerEntitlements_Optional = NewValue; SkippedServerEntitlements_IsSet = true; }
    void ClearSkippedServerEntitlements() { SkippedServerEntitlements_Optional = false; SkippedServerEntitlements_IsSet = false; }
    bool IsSkippedServerEntitlementsDefaultValue() const { return SkippedServerEntitlements_IsSet && SkippedServerEntitlements_Optional == false; }
    void SetSkippedServerEntitlementsToDefault() { SkippedServerEntitlements_Optional = false; SkippedServerEntitlements_IsSet = true; }
};
