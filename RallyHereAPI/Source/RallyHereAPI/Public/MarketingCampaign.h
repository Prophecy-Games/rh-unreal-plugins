/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "InventoryPortal.h"
#include "KeyType.h"
#include "MarketingCampaign.generated.h"

/*
* FRHAPI_MarketingCampaign
*
* A Marketing Campaign is a set of external keys that can be claimed by players.The key claims are assigned to the player based on
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_MarketingCampaign : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* The unique identifier for the Marketing Campaign */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FGuid Uuid{  };
    FGuid& GetUuid() { return Uuid; }
    const FGuid& GetUuid() const { return Uuid; }
    void SetUuid(FGuid NewValue) { Uuid = NewValue;  }

    /* The name of the Marketing Campaign */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString Name{  };
    FString& GetName() { return Name; }
    const FString& GetName() const { return Name; }
    void SetName(FString NewValue) { Name = NewValue;  }

    /* Platform for the Marketing Campaign */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_InventoryPortal PortalId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool PortalId_IsSet{ false };
    ERHAPI_InventoryPortal& GetPortalId() { return PortalId_Optional; }
    const ERHAPI_InventoryPortal& GetPortalId() const { return PortalId_Optional; }
    const ERHAPI_InventoryPortal& GetPortalId(const ERHAPI_InventoryPortal& DefaultValue) const { if (PortalId_IsSet) return PortalId_Optional; return DefaultValue; }
    bool GetPortalId(ERHAPI_InventoryPortal& OutValue) const { if (PortalId_IsSet) OutValue = PortalId_Optional; return PortalId_IsSet; }
    ERHAPI_InventoryPortal* GetPortalIdOrNull() { if (PortalId_IsSet) return &PortalId_Optional; return nullptr; }
    const ERHAPI_InventoryPortal* GetPortalIdOrNull() const { if (PortalId_IsSet) return &PortalId_Optional; return nullptr; }
    void SetPortalId(ERHAPI_InventoryPortal NewValue) { PortalId_Optional = NewValue; PortalId_IsSet = true; }
    void ClearPortalId() { PortalId_IsSet = false; }

    /* The types of keys that can be claimed from this campaign */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FRHAPI_KeyType> KeyTypes{  };
    TArray<FRHAPI_KeyType>& GetKeyTypes() { return KeyTypes; }
    const TArray<FRHAPI_KeyType>& GetKeyTypes() const { return KeyTypes; }
    void SetKeyTypes(TArray<FRHAPI_KeyType> NewValue) { KeyTypes = NewValue;  }

    /* The time the MarketingCampaign was created */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString CreatedOn_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CreatedOn_IsSet{ false };
    FString& GetCreatedOn() { return CreatedOn_Optional; }
    const FString& GetCreatedOn() const { return CreatedOn_Optional; }
    const FString& GetCreatedOn(const FString& DefaultValue) const { if (CreatedOn_IsSet) return CreatedOn_Optional; return DefaultValue; }
    bool GetCreatedOn(FString& OutValue) const { if (CreatedOn_IsSet) OutValue = CreatedOn_Optional; return CreatedOn_IsSet; }
    FString* GetCreatedOnOrNull() { if (CreatedOn_IsSet) return &CreatedOn_Optional; return nullptr; }
    const FString* GetCreatedOnOrNull() const { if (CreatedOn_IsSet) return &CreatedOn_Optional; return nullptr; }
    void SetCreatedOn(FString NewValue) { CreatedOn_Optional = NewValue; CreatedOn_IsSet = true; }
    void ClearCreatedOn() { CreatedOn_IsSet = false; }

    /* The time the MarketingCampaign was last modified */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString LastModifiedOn_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool LastModifiedOn_IsSet{ false };
    FString& GetLastModifiedOn() { return LastModifiedOn_Optional; }
    const FString& GetLastModifiedOn() const { return LastModifiedOn_Optional; }
    const FString& GetLastModifiedOn(const FString& DefaultValue) const { if (LastModifiedOn_IsSet) return LastModifiedOn_Optional; return DefaultValue; }
    bool GetLastModifiedOn(FString& OutValue) const { if (LastModifiedOn_IsSet) OutValue = LastModifiedOn_Optional; return LastModifiedOn_IsSet; }
    FString* GetLastModifiedOnOrNull() { if (LastModifiedOn_IsSet) return &LastModifiedOn_Optional; return nullptr; }
    const FString* GetLastModifiedOnOrNull() const { if (LastModifiedOn_IsSet) return &LastModifiedOn_Optional; return nullptr; }
    void SetLastModifiedOn(FString NewValue) { LastModifiedOn_Optional = NewValue; LastModifiedOn_IsSet = true; }
    void ClearLastModifiedOn() { LastModifiedOn_IsSet = false; }
};
