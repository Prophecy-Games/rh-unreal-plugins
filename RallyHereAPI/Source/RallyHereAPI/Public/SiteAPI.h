/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "CoreMinimal.h"
#include "RallyHereAPIAuthContext.h"
#include "RallyHereAPIHelpers.h"
#include "SiteSettings.h"

namespace RallyHereAPI
{
using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

struct FRequest_GetSiteSettings;
struct FResponse_GetSiteSettings;

DECLARE_DELEGATE_OneParam(FDelegate_GetSiteSettings, const FResponse_GetSiteSettings&);

class RALLYHEREAPI_API FSiteAPI : public FAPI
{
public:
    FSiteAPI();
    virtual ~FSiteAPI();

    FHttpRequestPtr GetSiteSettings(const FRequest_GetSiteSettings& Request, const FDelegate_GetSiteSettings& Delegate = FDelegate_GetSiteSettings());

private:
    void OnGetSiteSettingsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDelegate_GetSiteSettings Delegate, FRequestMetadata RequestMetadata, TSharedPtr<FAuthContext> AuthContextForRetry);

};

/* Get Site Settings
 *
 * Returns a list of all the enabled Sites/Regions.
*/
struct RALLYHEREAPI_API FRequest_GetSiteSettings : public FRequest
{
    FRequest_GetSiteSettings();
    virtual ~FRequest_GetSiteSettings() = default;
    bool SetupHttpRequest(const FHttpRequestRef& HttpRequest) const override;
    FString ComputePath() const override;
    FString GetSimplifiedPath() const override;
    TSharedPtr<FAuthContext> GetAuthContext() const override { return AuthContext; }

    TSharedPtr<FAuthContext> AuthContext;
};

struct RALLYHEREAPI_API FResponse_GetSiteSettings : public FResponse
{
    FResponse_GetSiteSettings(FRequestMetadata InRequestMetadata);
    virtual ~FResponse_GetSiteSettings() = default;
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) override;

    TArray<FRHAPI_SiteSettings> Content;

};

struct RALLYHEREAPI_API Traits_GetSiteSettings
{
    typedef FRequest_GetSiteSettings Request;
    typedef FResponse_GetSiteSettings Response;
    typedef FDelegate_GetSiteSettings Delegate;
    typedef FSiteAPI API;
    static FString Name;
	
    static FHttpRequestPtr DoCall(API& InAPI, const Request& InRequest, Delegate InDelegate = Delegate()) { return InAPI.GetSiteSettings(InRequest, InDelegate); }
};


}
