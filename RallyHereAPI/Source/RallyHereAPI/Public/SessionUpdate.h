// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "SessionUpdate.generated.h"

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_SessionUpdate : public FRHAPI_Model
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Preferred site for the instance and match to take place in */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 SiteId_Optional{  };
    /** @brief true if SiteId_Optional has been set to a value */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool SiteId_IsSet{ false };
    /** @brief Gets the value of SiteId_Optional, regardless of it having been set */
    int32& GetSiteId() { return SiteId_Optional; }
    /** @brief Gets the value of SiteId_Optional, regardless of it having been set */
    const int32& GetSiteId() const { return SiteId_Optional; }
    /** @brief Gets the value of SiteId_Optional, if it has been set, otherwise it returns DefaultValue */
    const int32& GetSiteId(const int32& DefaultValue) const { if (SiteId_IsSet) return SiteId_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of SiteId_Optional and returns true if it has been set, otherwise returns false */
    bool GetSiteId(int32& OutValue) const { if (SiteId_IsSet) OutValue = SiteId_Optional; return SiteId_IsSet; }
    /** @brief Returns a pointer to SiteId_Optional, if it has been set, otherwise returns nullptr */
    int32* GetSiteIdOrNull() { if (SiteId_IsSet) return &SiteId_Optional; return nullptr; }
    /** @brief Returns a pointer to SiteId_Optional, if it has been set, otherwise returns nullptr */
    const int32* GetSiteIdOrNull() const { if (SiteId_IsSet) return &SiteId_Optional; return nullptr; }
    /** @brief Sets the value of SiteId_Optional and also sets SiteId_IsSet to true */
    void SetSiteId(int32 NewValue) { SiteId_Optional = NewValue; SiteId_IsSet = true; }
     /** @brief Clears the value of SiteId_Optional and sets SiteId_IsSet to false */
    void ClearSiteId() { SiteId_Optional = 0; SiteId_IsSet = false; }
    /** @brief Returns true if SiteId_Optional is set and matches the default value */
    bool IsSiteIdDefaultValue() const { return SiteId_IsSet && SiteId_Optional == 0; }
    /** @brief Sets the value of SiteId_Optional to its default and also sets SiteId_IsSet to true */
    void SetSiteIdToDefault() { SiteId_Optional = 0; SiteId_IsSet = true; }

    /** @brief Leader Player or instance defined custom data about this session */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TMap<FString, FString> CustomData_Optional{  };
    /** @brief true if CustomData_Optional has been set to a value */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CustomData_IsSet{ false };
    /** @brief Gets the value of CustomData_Optional, regardless of it having been set */
    TMap<FString, FString>& GetCustomData() { return CustomData_Optional; }
    /** @brief Gets the value of CustomData_Optional, regardless of it having been set */
    const TMap<FString, FString>& GetCustomData() const { return CustomData_Optional; }
    /** @brief Gets the value of CustomData_Optional, if it has been set, otherwise it returns DefaultValue */
    const TMap<FString, FString>& GetCustomData(const TMap<FString, FString>& DefaultValue) const { if (CustomData_IsSet) return CustomData_Optional; return DefaultValue; }
    /** @brief Fills OutValue with the value of CustomData_Optional and returns true if it has been set, otherwise returns false */
    bool GetCustomData(TMap<FString, FString>& OutValue) const { if (CustomData_IsSet) OutValue = CustomData_Optional; return CustomData_IsSet; }
    /** @brief Returns a pointer to CustomData_Optional, if it has been set, otherwise returns nullptr */
    TMap<FString, FString>* GetCustomDataOrNull() { if (CustomData_IsSet) return &CustomData_Optional; return nullptr; }
    /** @brief Returns a pointer to CustomData_Optional, if it has been set, otherwise returns nullptr */
    const TMap<FString, FString>* GetCustomDataOrNull() const { if (CustomData_IsSet) return &CustomData_Optional; return nullptr; }
    /** @brief Sets the value of CustomData_Optional and also sets CustomData_IsSet to true */
    void SetCustomData(TMap<FString, FString> NewValue) { CustomData_Optional = NewValue; CustomData_IsSet = true; }
     /** @brief Clears the value of CustomData_Optional and sets CustomData_IsSet to false */
    void ClearCustomData() { CustomData_IsSet = false; }
};
