/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "PersonInfoResponse.generated.h"

/*
* FRHAPI_PersonInfoResponse
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PersonInfoResponse : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString PersonId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool PersonId_IsSet{ false };
    FString& GetPersonId() { return PersonId_Optional; }
    const FString& GetPersonId() const { return PersonId_Optional; }
    const FString& GetPersonId(const FString& DefaultValue) const { if (PersonId_IsSet) return PersonId_Optional; return DefaultValue; }
    bool GetPersonId(FString& OutValue) const { if (PersonId_IsSet) OutValue = PersonId_Optional; return PersonId_IsSet; }
    FString* GetPersonIdOrNull() { if (PersonId_IsSet) return &PersonId_Optional; return nullptr; }
    const FString* GetPersonIdOrNull() const { if (PersonId_IsSet) return &PersonId_Optional; return nullptr; }
    void SetPersonId(FString NewValue) { PersonId_Optional = NewValue; PersonId_IsSet = true; }
    void ClearPersonId() { PersonId_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 ActivePlayerId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ActivePlayerId_IsSet{ false };
    int32& GetActivePlayerId() { return ActivePlayerId_Optional; }
    const int32& GetActivePlayerId() const { return ActivePlayerId_Optional; }
    const int32& GetActivePlayerId(const int32& DefaultValue) const { if (ActivePlayerId_IsSet) return ActivePlayerId_Optional; return DefaultValue; }
    bool GetActivePlayerId(int32& OutValue) const { if (ActivePlayerId_IsSet) OutValue = ActivePlayerId_Optional; return ActivePlayerId_IsSet; }
    int32* GetActivePlayerIdOrNull() { if (ActivePlayerId_IsSet) return &ActivePlayerId_Optional; return nullptr; }
    const int32* GetActivePlayerIdOrNull() const { if (ActivePlayerId_IsSet) return &ActivePlayerId_Optional; return nullptr; }
    void SetActivePlayerId(int32 NewValue) { ActivePlayerId_Optional = NewValue; ActivePlayerId_IsSet = true; }
    void ClearActivePlayerId() { ActivePlayerId_Optional = 0; ActivePlayerId_IsSet = false; }
    bool IsActivePlayerIdDefaultValue() const { return ActivePlayerId_IsSet && ActivePlayerId_Optional == 0; }
    void SetActivePlayerIdToDefault() { ActivePlayerId_Optional = 0; ActivePlayerId_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString Email_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Email_IsSet{ false };
    FString& GetEmail() { return Email_Optional; }
    const FString& GetEmail() const { return Email_Optional; }
    const FString& GetEmail(const FString& DefaultValue) const { if (Email_IsSet) return Email_Optional; return DefaultValue; }
    bool GetEmail(FString& OutValue) const { if (Email_IsSet) OutValue = Email_Optional; return Email_IsSet; }
    FString* GetEmailOrNull() { if (Email_IsSet) return &Email_Optional; return nullptr; }
    const FString* GetEmailOrNull() const { if (Email_IsSet) return &Email_Optional; return nullptr; }
    void SetEmail(FString NewValue) { Email_Optional = NewValue; Email_IsSet = true; }
    void ClearEmail() { Email_IsSet = false; }
};
