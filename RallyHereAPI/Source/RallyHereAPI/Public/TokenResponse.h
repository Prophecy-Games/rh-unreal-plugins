/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "TokenResponse.generated.h"

/*
* FRHAPI_TokenResponse
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_TokenResponse : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString AccessToken{  };
    FString& GetAccessToken() { return AccessToken; }
    const FString& GetAccessToken() const { return AccessToken; }
    void SetAccessToken(FString NewValue) { AccessToken = NewValue;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString TokenType{  };
    FString& GetTokenType() { return TokenType; }
    const FString& GetTokenType() const { return TokenType; }
    void SetTokenType(FString NewValue) { TokenType = NewValue;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString RefreshToken_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool RefreshToken_IsSet{ false };
    FString& GetRefreshToken() { return RefreshToken_Optional; }
    const FString& GetRefreshToken() const { return RefreshToken_Optional; }
    const FString& GetRefreshToken(const FString& DefaultValue) const { if (RefreshToken_IsSet) return RefreshToken_Optional; return DefaultValue; }
    bool GetRefreshToken(FString& OutValue) const { if (RefreshToken_IsSet) OutValue = RefreshToken_Optional; return RefreshToken_IsSet; }
    FString* GetRefreshTokenOrNull() { if (RefreshToken_IsSet) return &RefreshToken_Optional; return nullptr; }
    const FString* GetRefreshTokenOrNull() const { if (RefreshToken_IsSet) return &RefreshToken_Optional; return nullptr; }
    void SetRefreshToken(FString NewValue) { RefreshToken_Optional = NewValue; RefreshToken_IsSet = true; }
    void ClearRefreshToken() { RefreshToken_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 ExpiresIn{ 0 };
    int32& GetExpiresIn() { return ExpiresIn; }
    const int32& GetExpiresIn() const { return ExpiresIn; }
    void SetExpiresIn(int32 NewValue) { ExpiresIn = NewValue;  }
    bool IsExpiresInDefaultValue() const { return ExpiresIn == 0; }
    void SetExpiresInToDefault() { ExpiresIn = 0;  }
};
