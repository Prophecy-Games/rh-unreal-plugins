/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "CrossplayInput.h"
#include "CrossplayPlatform.h"
#include "CrossplayPreferences.generated.h"

/*
* FRHAPI_CrossplayPreferences
*
* Client&#39;s desired crossplay settings to determine which other clients it can play with. If not defined, assumed to be as permissive as possible
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_CrossplayPreferences : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* The platform type that the client is allowed to play with (any, xbox-like only, playstation-like only etc.) */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_CrossplayPlatform PermittedPlatform{  };
    ERHAPI_CrossplayPlatform& GetPermittedPlatform() { return PermittedPlatform; }
    const ERHAPI_CrossplayPlatform& GetPermittedPlatform() const { return PermittedPlatform; }
    void SetPermittedPlatform(ERHAPI_CrossplayPlatform NewValue) { PermittedPlatform = NewValue;  }

    /* The input type that the client is allowed to play with (keyboard and mouse, gamepad, touch input etc.) */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_CrossplayInput PermittedInput{  };
    ERHAPI_CrossplayInput& GetPermittedInput() { return PermittedInput; }
    const ERHAPI_CrossplayInput& GetPermittedInput() const { return PermittedInput; }
    void SetPermittedInput(ERHAPI_CrossplayInput NewValue) { PermittedInput = NewValue;  }
};
