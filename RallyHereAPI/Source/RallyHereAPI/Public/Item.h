/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "CacheInfo.h"
#include "ItemType.h"
#include "Item.generated.h"

/*
* FRHAPI_Item
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_Item : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_ItemType Type_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Type_IsSet{ false };
    ERHAPI_ItemType& GetType() { return Type_Optional; }
    const ERHAPI_ItemType& GetType() const { return Type_Optional; }
    const ERHAPI_ItemType& GetType(const ERHAPI_ItemType& DefaultValue) const { if (Type_IsSet) return Type_Optional; return DefaultValue; }
    bool GetType(ERHAPI_ItemType& OutValue) const { if (Type_IsSet) OutValue = Type_Optional; return Type_IsSet; }
    ERHAPI_ItemType* GetTypeOrNull() { if (Type_IsSet) return &Type_Optional; return nullptr; }
    const ERHAPI_ItemType* GetTypeOrNull() const { if (Type_IsSet) return &Type_Optional; return nullptr; }
    void SetType(ERHAPI_ItemType NewValue) { Type_Optional = NewValue; Type_IsSet = true; }
    void ClearType() { Type_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 LegacyType_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool LegacyType_IsSet{ false };
    int32& GetLegacyType() { return LegacyType_Optional; }
    const int32& GetLegacyType() const { return LegacyType_Optional; }
    const int32& GetLegacyType(const int32& DefaultValue) const { if (LegacyType_IsSet) return LegacyType_Optional; return DefaultValue; }
    bool GetLegacyType(int32& OutValue) const { if (LegacyType_IsSet) OutValue = LegacyType_Optional; return LegacyType_IsSet; }
    int32* GetLegacyTypeOrNull() { if (LegacyType_IsSet) return &LegacyType_Optional; return nullptr; }
    const int32* GetLegacyTypeOrNull() const { if (LegacyType_IsSet) return &LegacyType_Optional; return nullptr; }
    void SetLegacyType(int32 NewValue) { LegacyType_Optional = NewValue; LegacyType_IsSet = true; }
    void ClearLegacyType() { LegacyType_Optional = 0; LegacyType_IsSet = false; }
    bool IsLegacyTypeDefaultValue() const { return LegacyType_IsSet && LegacyType_Optional == 0; }
    void SetLegacyTypeToDefault() { LegacyType_Optional = 0; LegacyType_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 LegacySubtype_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool LegacySubtype_IsSet{ false };
    int32& GetLegacySubtype() { return LegacySubtype_Optional; }
    const int32& GetLegacySubtype() const { return LegacySubtype_Optional; }
    const int32& GetLegacySubtype(const int32& DefaultValue) const { if (LegacySubtype_IsSet) return LegacySubtype_Optional; return DefaultValue; }
    bool GetLegacySubtype(int32& OutValue) const { if (LegacySubtype_IsSet) OutValue = LegacySubtype_Optional; return LegacySubtype_IsSet; }
    int32* GetLegacySubtypeOrNull() { if (LegacySubtype_IsSet) return &LegacySubtype_Optional; return nullptr; }
    const int32* GetLegacySubtypeOrNull() const { if (LegacySubtype_IsSet) return &LegacySubtype_Optional; return nullptr; }
    void SetLegacySubtype(int32 NewValue) { LegacySubtype_Optional = NewValue; LegacySubtype_IsSet = true; }
    void ClearLegacySubtype() { LegacySubtype_Optional = 0; LegacySubtype_IsSet = false; }
    bool IsLegacySubtypeDefaultValue() const { return LegacySubtype_IsSet && LegacySubtype_Optional == 0; }
    void SetLegacySubtypeToDefault() { LegacySubtype_Optional = 0; LegacySubtype_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 RefItemId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool RefItemId_IsSet{ false };
    int32& GetRefItemId() { return RefItemId_Optional; }
    const int32& GetRefItemId() const { return RefItemId_Optional; }
    const int32& GetRefItemId(const int32& DefaultValue) const { if (RefItemId_IsSet) return RefItemId_Optional; return DefaultValue; }
    bool GetRefItemId(int32& OutValue) const { if (RefItemId_IsSet) OutValue = RefItemId_Optional; return RefItemId_IsSet; }
    int32* GetRefItemIdOrNull() { if (RefItemId_IsSet) return &RefItemId_Optional; return nullptr; }
    const int32* GetRefItemIdOrNull() const { if (RefItemId_IsSet) return &RefItemId_Optional; return nullptr; }
    void SetRefItemId(int32 NewValue) { RefItemId_Optional = NewValue; RefItemId_IsSet = true; }
    void ClearRefItemId() { RefItemId_Optional = 0; RefItemId_IsSet = false; }
    bool IsRefItemIdDefaultValue() const { return RefItemId_IsSet && RefItemId_Optional == 0; }
    void SetRefItemIdToDefault() { RefItemId_Optional = 0; RefItemId_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 AvailabilityFlags_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AvailabilityFlags_IsSet{ false };
    int32& GetAvailabilityFlags() { return AvailabilityFlags_Optional; }
    const int32& GetAvailabilityFlags() const { return AvailabilityFlags_Optional; }
    const int32& GetAvailabilityFlags(const int32& DefaultValue) const { if (AvailabilityFlags_IsSet) return AvailabilityFlags_Optional; return DefaultValue; }
    bool GetAvailabilityFlags(int32& OutValue) const { if (AvailabilityFlags_IsSet) OutValue = AvailabilityFlags_Optional; return AvailabilityFlags_IsSet; }
    int32* GetAvailabilityFlagsOrNull() { if (AvailabilityFlags_IsSet) return &AvailabilityFlags_Optional; return nullptr; }
    const int32* GetAvailabilityFlagsOrNull() const { if (AvailabilityFlags_IsSet) return &AvailabilityFlags_Optional; return nullptr; }
    void SetAvailabilityFlags(int32 NewValue) { AvailabilityFlags_Optional = NewValue; AvailabilityFlags_IsSet = true; }
    void ClearAvailabilityFlags() { AvailabilityFlags_Optional = 0; AvailabilityFlags_IsSet = false; }
    bool IsAvailabilityFlagsDefaultValue() const { return AvailabilityFlags_IsSet && AvailabilityFlags_Optional == 0; }
    void SetAvailabilityFlagsToDefault() { AvailabilityFlags_Optional = 0; AvailabilityFlags_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 EntitledLootId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool EntitledLootId_IsSet{ false };
    int32& GetEntitledLootId() { return EntitledLootId_Optional; }
    const int32& GetEntitledLootId() const { return EntitledLootId_Optional; }
    const int32& GetEntitledLootId(const int32& DefaultValue) const { if (EntitledLootId_IsSet) return EntitledLootId_Optional; return DefaultValue; }
    bool GetEntitledLootId(int32& OutValue) const { if (EntitledLootId_IsSet) OutValue = EntitledLootId_Optional; return EntitledLootId_IsSet; }
    int32* GetEntitledLootIdOrNull() { if (EntitledLootId_IsSet) return &EntitledLootId_Optional; return nullptr; }
    const int32* GetEntitledLootIdOrNull() const { if (EntitledLootId_IsSet) return &EntitledLootId_Optional; return nullptr; }
    void SetEntitledLootId(int32 NewValue) { EntitledLootId_Optional = NewValue; EntitledLootId_IsSet = true; }
    void ClearEntitledLootId() { EntitledLootId_Optional = 0; EntitledLootId_IsSet = false; }
    bool IsEntitledLootIdDefaultValue() const { return EntitledLootId_IsSet && EntitledLootId_Optional == 0; }
    void SetEntitledLootIdToDefault() { EntitledLootId_Optional = 0; EntitledLootId_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 LevelXpTableId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool LevelXpTableId_IsSet{ false };
    int32& GetLevelXpTableId() { return LevelXpTableId_Optional; }
    const int32& GetLevelXpTableId() const { return LevelXpTableId_Optional; }
    const int32& GetLevelXpTableId(const int32& DefaultValue) const { if (LevelXpTableId_IsSet) return LevelXpTableId_Optional; return DefaultValue; }
    bool GetLevelXpTableId(int32& OutValue) const { if (LevelXpTableId_IsSet) OutValue = LevelXpTableId_Optional; return LevelXpTableId_IsSet; }
    int32* GetLevelXpTableIdOrNull() { if (LevelXpTableId_IsSet) return &LevelXpTableId_Optional; return nullptr; }
    const int32* GetLevelXpTableIdOrNull() const { if (LevelXpTableId_IsSet) return &LevelXpTableId_Optional; return nullptr; }
    void SetLevelXpTableId(int32 NewValue) { LevelXpTableId_Optional = NewValue; LevelXpTableId_IsSet = true; }
    void ClearLevelXpTableId() { LevelXpTableId_Optional = 0; LevelXpTableId_IsSet = false; }
    bool IsLevelXpTableIdDefaultValue() const { return LevelXpTableId_IsSet && LevelXpTableId_Optional == 0; }
    void SetLevelXpTableIdToDefault() { LevelXpTableId_Optional = 0; LevelXpTableId_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 LevelVendorId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool LevelVendorId_IsSet{ false };
    int32& GetLevelVendorId() { return LevelVendorId_Optional; }
    const int32& GetLevelVendorId() const { return LevelVendorId_Optional; }
    const int32& GetLevelVendorId(const int32& DefaultValue) const { if (LevelVendorId_IsSet) return LevelVendorId_Optional; return DefaultValue; }
    bool GetLevelVendorId(int32& OutValue) const { if (LevelVendorId_IsSet) OutValue = LevelVendorId_Optional; return LevelVendorId_IsSet; }
    int32* GetLevelVendorIdOrNull() { if (LevelVendorId_IsSet) return &LevelVendorId_Optional; return nullptr; }
    const int32* GetLevelVendorIdOrNull() const { if (LevelVendorId_IsSet) return &LevelVendorId_Optional; return nullptr; }
    void SetLevelVendorId(int32 NewValue) { LevelVendorId_Optional = NewValue; LevelVendorId_IsSet = true; }
    void ClearLevelVendorId() { LevelVendorId_Optional = 0; LevelVendorId_IsSet = false; }
    bool IsLevelVendorIdDefaultValue() const { return LevelVendorId_IsSet && LevelVendorId_Optional == 0; }
    void SetLevelVendorIdToDefault() { LevelVendorId_Optional = 0; LevelVendorId_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 CouponDiscountCurrencyItemId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CouponDiscountCurrencyItemId_IsSet{ false };
    int32& GetCouponDiscountCurrencyItemId() { return CouponDiscountCurrencyItemId_Optional; }
    const int32& GetCouponDiscountCurrencyItemId() const { return CouponDiscountCurrencyItemId_Optional; }
    const int32& GetCouponDiscountCurrencyItemId(const int32& DefaultValue) const { if (CouponDiscountCurrencyItemId_IsSet) return CouponDiscountCurrencyItemId_Optional; return DefaultValue; }
    bool GetCouponDiscountCurrencyItemId(int32& OutValue) const { if (CouponDiscountCurrencyItemId_IsSet) OutValue = CouponDiscountCurrencyItemId_Optional; return CouponDiscountCurrencyItemId_IsSet; }
    int32* GetCouponDiscountCurrencyItemIdOrNull() { if (CouponDiscountCurrencyItemId_IsSet) return &CouponDiscountCurrencyItemId_Optional; return nullptr; }
    const int32* GetCouponDiscountCurrencyItemIdOrNull() const { if (CouponDiscountCurrencyItemId_IsSet) return &CouponDiscountCurrencyItemId_Optional; return nullptr; }
    void SetCouponDiscountCurrencyItemId(int32 NewValue) { CouponDiscountCurrencyItemId_Optional = NewValue; CouponDiscountCurrencyItemId_IsSet = true; }
    void ClearCouponDiscountCurrencyItemId() { CouponDiscountCurrencyItemId_Optional = 0; CouponDiscountCurrencyItemId_IsSet = false; }
    bool IsCouponDiscountCurrencyItemIdDefaultValue() const { return CouponDiscountCurrencyItemId_IsSet && CouponDiscountCurrencyItemId_Optional == 0; }
    void SetCouponDiscountCurrencyItemIdToDefault() { CouponDiscountCurrencyItemId_Optional = 0; CouponDiscountCurrencyItemId_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    double CouponDiscountPercentage_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CouponDiscountPercentage_IsSet{ false };
    double& GetCouponDiscountPercentage() { return CouponDiscountPercentage_Optional; }
    const double& GetCouponDiscountPercentage() const { return CouponDiscountPercentage_Optional; }
    const double& GetCouponDiscountPercentage(const double& DefaultValue) const { if (CouponDiscountPercentage_IsSet) return CouponDiscountPercentage_Optional; return DefaultValue; }
    bool GetCouponDiscountPercentage(double& OutValue) const { if (CouponDiscountPercentage_IsSet) OutValue = CouponDiscountPercentage_Optional; return CouponDiscountPercentage_IsSet; }
    double* GetCouponDiscountPercentageOrNull() { if (CouponDiscountPercentage_IsSet) return &CouponDiscountPercentage_Optional; return nullptr; }
    const double* GetCouponDiscountPercentageOrNull() const { if (CouponDiscountPercentage_IsSet) return &CouponDiscountPercentage_Optional; return nullptr; }
    void SetCouponDiscountPercentage(double NewValue) { CouponDiscountPercentage_Optional = NewValue; CouponDiscountPercentage_IsSet = true; }
    void ClearCouponDiscountPercentage() { CouponDiscountPercentage_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CouponConsumeOnUse_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CouponConsumeOnUse_IsSet{ false };
    bool& GetCouponConsumeOnUse() { return CouponConsumeOnUse_Optional; }
    const bool& GetCouponConsumeOnUse() const { return CouponConsumeOnUse_Optional; }
    const bool& GetCouponConsumeOnUse(const bool& DefaultValue) const { if (CouponConsumeOnUse_IsSet) return CouponConsumeOnUse_Optional; return DefaultValue; }
    bool GetCouponConsumeOnUse(bool& OutValue) const { if (CouponConsumeOnUse_IsSet) OutValue = CouponConsumeOnUse_Optional; return CouponConsumeOnUse_IsSet; }
    bool* GetCouponConsumeOnUseOrNull() { if (CouponConsumeOnUse_IsSet) return &CouponConsumeOnUse_Optional; return nullptr; }
    const bool* GetCouponConsumeOnUseOrNull() const { if (CouponConsumeOnUse_IsSet) return &CouponConsumeOnUse_Optional; return nullptr; }
    void SetCouponConsumeOnUse(bool NewValue) { CouponConsumeOnUse_Optional = NewValue; CouponConsumeOnUse_IsSet = true; }
    void ClearCouponConsumeOnUse() { CouponConsumeOnUse_Optional = false; CouponConsumeOnUse_IsSet = false; }
    bool IsCouponConsumeOnUseDefaultValue() const { return CouponConsumeOnUse_IsSet && CouponConsumeOnUse_Optional == false; }
    void SetCouponConsumeOnUseToDefault() { CouponConsumeOnUse_Optional = false; CouponConsumeOnUse_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 ItemPortalUseRulesetId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ItemPortalUseRulesetId_IsSet{ false };
    int32& GetItemPortalUseRulesetId() { return ItemPortalUseRulesetId_Optional; }
    const int32& GetItemPortalUseRulesetId() const { return ItemPortalUseRulesetId_Optional; }
    const int32& GetItemPortalUseRulesetId(const int32& DefaultValue) const { if (ItemPortalUseRulesetId_IsSet) return ItemPortalUseRulesetId_Optional; return DefaultValue; }
    bool GetItemPortalUseRulesetId(int32& OutValue) const { if (ItemPortalUseRulesetId_IsSet) OutValue = ItemPortalUseRulesetId_Optional; return ItemPortalUseRulesetId_IsSet; }
    int32* GetItemPortalUseRulesetIdOrNull() { if (ItemPortalUseRulesetId_IsSet) return &ItemPortalUseRulesetId_Optional; return nullptr; }
    const int32* GetItemPortalUseRulesetIdOrNull() const { if (ItemPortalUseRulesetId_IsSet) return &ItemPortalUseRulesetId_Optional; return nullptr; }
    void SetItemPortalUseRulesetId(int32 NewValue) { ItemPortalUseRulesetId_Optional = NewValue; ItemPortalUseRulesetId_IsSet = true; }
    void ClearItemPortalUseRulesetId() { ItemPortalUseRulesetId_Optional = 0; ItemPortalUseRulesetId_IsSet = false; }
    bool IsItemPortalUseRulesetIdDefaultValue() const { return ItemPortalUseRulesetId_IsSet && ItemPortalUseRulesetId_Optional == 0; }
    void SetItemPortalUseRulesetIdToDefault() { ItemPortalUseRulesetId_Optional = 0; ItemPortalUseRulesetId_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString InventoryBucketUseRuleSetId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool InventoryBucketUseRuleSetId_IsSet{ false };
    FString& GetInventoryBucketUseRuleSetId() { return InventoryBucketUseRuleSetId_Optional; }
    const FString& GetInventoryBucketUseRuleSetId() const { return InventoryBucketUseRuleSetId_Optional; }
    const FString& GetInventoryBucketUseRuleSetId(const FString& DefaultValue) const { if (InventoryBucketUseRuleSetId_IsSet) return InventoryBucketUseRuleSetId_Optional; return DefaultValue; }
    bool GetInventoryBucketUseRuleSetId(FString& OutValue) const { if (InventoryBucketUseRuleSetId_IsSet) OutValue = InventoryBucketUseRuleSetId_Optional; return InventoryBucketUseRuleSetId_IsSet; }
    FString* GetInventoryBucketUseRuleSetIdOrNull() { if (InventoryBucketUseRuleSetId_IsSet) return &InventoryBucketUseRuleSetId_Optional; return nullptr; }
    const FString* GetInventoryBucketUseRuleSetIdOrNull() const { if (InventoryBucketUseRuleSetId_IsSet) return &InventoryBucketUseRuleSetId_Optional; return nullptr; }
    void SetInventoryBucketUseRuleSetId(FString NewValue) { InventoryBucketUseRuleSetId_Optional = NewValue; InventoryBucketUseRuleSetId_IsSet = true; }
    void ClearInventoryBucketUseRuleSetId() { InventoryBucketUseRuleSetId_IsSet = false; }

    /* List of Loot IDs this item can discount */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<int32> CouponDiscountLoot_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CouponDiscountLoot_IsSet{ false };
    TArray<int32>& GetCouponDiscountLoot() { return CouponDiscountLoot_Optional; }
    const TArray<int32>& GetCouponDiscountLoot() const { return CouponDiscountLoot_Optional; }
    const TArray<int32>& GetCouponDiscountLoot(const TArray<int32>& DefaultValue) const { if (CouponDiscountLoot_IsSet) return CouponDiscountLoot_Optional; return DefaultValue; }
    bool GetCouponDiscountLoot(TArray<int32>& OutValue) const { if (CouponDiscountLoot_IsSet) OutValue = CouponDiscountLoot_Optional; return CouponDiscountLoot_IsSet; }
    TArray<int32>* GetCouponDiscountLootOrNull() { if (CouponDiscountLoot_IsSet) return &CouponDiscountLoot_Optional; return nullptr; }
    const TArray<int32>* GetCouponDiscountLootOrNull() const { if (CouponDiscountLoot_IsSet) return &CouponDiscountLoot_Optional; return nullptr; }
    void SetCouponDiscountLoot(TArray<int32> NewValue) { CouponDiscountLoot_Optional = NewValue; CouponDiscountLoot_IsSet = true; }
    void ClearCouponDiscountLoot() { CouponDiscountLoot_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FRHAPI_CacheInfo CacheInfo_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CacheInfo_IsSet{ false };
    FRHAPI_CacheInfo& GetCacheInfo() { return CacheInfo_Optional; }
    const FRHAPI_CacheInfo& GetCacheInfo() const { return CacheInfo_Optional; }
    const FRHAPI_CacheInfo& GetCacheInfo(const FRHAPI_CacheInfo& DefaultValue) const { if (CacheInfo_IsSet) return CacheInfo_Optional; return DefaultValue; }
    bool GetCacheInfo(FRHAPI_CacheInfo& OutValue) const { if (CacheInfo_IsSet) OutValue = CacheInfo_Optional; return CacheInfo_IsSet; }
    FRHAPI_CacheInfo* GetCacheInfoOrNull() { if (CacheInfo_IsSet) return &CacheInfo_Optional; return nullptr; }
    const FRHAPI_CacheInfo* GetCacheInfoOrNull() const { if (CacheInfo_IsSet) return &CacheInfo_Optional; return nullptr; }
    void SetCacheInfo(FRHAPI_CacheInfo NewValue) { CacheInfo_Optional = NewValue; CacheInfo_IsSet = true; }
    void ClearCacheInfo() { CacheInfo_IsSet = false; }
};
