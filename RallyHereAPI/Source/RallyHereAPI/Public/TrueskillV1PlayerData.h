/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "Rating.h"
#include "TrueskillV1PlayerData.generated.h"

/*
* FRHAPI_TrueskillV1PlayerData
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_TrueskillV1PlayerData : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* UUID for this specific player */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FGuid PlayerUuid{  };
    FGuid& GetPlayerUuid() { return PlayerUuid; }
    const FGuid& GetPlayerUuid() const { return PlayerUuid; }
    void SetPlayerUuid(FGuid NewValue) { PlayerUuid = NewValue;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FRHAPI_Rating Rating{  };
    FRHAPI_Rating& GetRating() { return Rating; }
    const FRHAPI_Rating& GetRating() const { return Rating; }
    void SetRating(FRHAPI_Rating NewValue) { Rating = NewValue;  }

    /* Ranking type for this rating */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 RankingType{ 0 };
    int32& GetRankingType() { return RankingType; }
    const int32& GetRankingType() const { return RankingType; }
    void SetRankingType(int32 NewValue) { RankingType = NewValue;  }
    bool IsRankingTypeDefaultValue() const { return RankingType == 0; }
    void SetRankingTypeToDefault() { RankingType = 0;  }

    /* How many seconds this player was in the match */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 SecondsInMatch{ 0 };
    int32& GetSecondsInMatch() { return SecondsInMatch; }
    const int32& GetSecondsInMatch() const { return SecondsInMatch; }
    void SetSecondsInMatch(int32 NewValue) { SecondsInMatch = NewValue;  }
    bool IsSecondsInMatchDefaultValue() const { return SecondsInMatch == 0; }
    void SetSecondsInMatchToDefault() { SecondsInMatch = 0;  }
};
