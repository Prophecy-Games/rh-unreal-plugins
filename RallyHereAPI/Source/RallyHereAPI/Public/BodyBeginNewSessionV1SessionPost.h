/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "BodyBeginNewSessionV1SessionPost.generated.h"

/*
* FRHAPI_BodyBeginNewSessionV1SessionPost
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_BodyBeginNewSessionV1SessionPost : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code for the user */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString CountryCode{  };
    FString& GetCountryCode() { return CountryCode; }
    const FString& GetCountryCode() const { return CountryCode; }
    void SetCountryCode(FString NewValue) { CountryCode = NewValue;  }

    /* Unique Identifier for the device a session is started on.  E.g should be the same for multiple users on the same device. */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString DeviceId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool DeviceId_IsSet{ false };
    FString& GetDeviceId() { return DeviceId_Optional; }
    const FString& GetDeviceId() const { return DeviceId_Optional; }
    const FString& GetDeviceId(const FString& DefaultValue) const { if (DeviceId_IsSet) return DeviceId_Optional; return DefaultValue; }
    bool GetDeviceId(FString& OutValue) const { if (DeviceId_IsSet) OutValue = DeviceId_Optional; return DeviceId_IsSet; }
    FString* GetDeviceIdOrNull() { if (DeviceId_IsSet) return &DeviceId_Optional; return nullptr; }
    const FString* GetDeviceIdOrNull() const { if (DeviceId_IsSet) return &DeviceId_Optional; return nullptr; }
    void SetDeviceId(FString NewValue) { DeviceId_Optional = NewValue; DeviceId_IsSet = true; }
    void ClearDeviceId() { DeviceId_IsSet = false; }
};
