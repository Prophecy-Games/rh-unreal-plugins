/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "HzApiErrorModel.generated.h"

/*
* FRHAPI_HzApiErrorModel
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_HzApiErrorModel : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AuthSuccess_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AuthSuccess_IsSet{ false };
    bool& GetAuthSuccess() { return AuthSuccess_Optional; }
    const bool& GetAuthSuccess() const { return AuthSuccess_Optional; }
    const bool& GetAuthSuccess(const bool& DefaultValue) const { if (AuthSuccess_IsSet) return AuthSuccess_Optional; return DefaultValue; }
    bool GetAuthSuccess(bool& OutValue) const { if (AuthSuccess_IsSet) OutValue = AuthSuccess_Optional; return AuthSuccess_IsSet; }
    bool* GetAuthSuccessOrNull() { if (AuthSuccess_IsSet) return &AuthSuccess_Optional; return nullptr; }
    const bool* GetAuthSuccessOrNull() const { if (AuthSuccess_IsSet) return &AuthSuccess_Optional; return nullptr; }
    void SetAuthSuccess(bool NewValue) { AuthSuccess_Optional = NewValue; AuthSuccess_IsSet = true; }
    void ClearAuthSuccess() { AuthSuccess_Optional = true; AuthSuccess_IsSet = false; }
    bool IsAuthSuccessDefaultValue() const { return AuthSuccess_IsSet && AuthSuccess_Optional == true; }
    void SetAuthSuccessToDefault() { AuthSuccess_Optional = true; AuthSuccess_IsSet = true; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString ErrorCode{  };
    FString& GetErrorCode() { return ErrorCode; }
    const FString& GetErrorCode() const { return ErrorCode; }
    void SetErrorCode(FString NewValue) { ErrorCode = NewValue;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString Desc{  };
    FString& GetDesc() { return Desc; }
    const FString& GetDesc() const { return Desc; }
    void SetDesc(FString NewValue) { Desc = NewValue;  }
};
