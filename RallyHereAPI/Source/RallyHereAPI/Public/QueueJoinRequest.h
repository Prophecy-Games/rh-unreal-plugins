/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "QueueJoinRequest.generated.h"

/*
* FRHAPI_QueueJoinRequest
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_QueueJoinRequest : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* ID of the queue to join */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString QueueId{  };
    FString& GetQueueId() { return QueueId; }
    const FString& GetQueueId() const { return QueueId; }
    void SetQueueId(FString NewValue) { QueueId = NewValue;  }

    /* Additional tags for open match to search with (see https://openmatch.dev/site/docs/reference/api/#searchfields) */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FString> AdditionalTags_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool AdditionalTags_IsSet{ false };
    TArray<FString>& GetAdditionalTags() { return AdditionalTags_Optional; }
    const TArray<FString>& GetAdditionalTags() const { return AdditionalTags_Optional; }
    const TArray<FString>& GetAdditionalTags(const TArray<FString>& DefaultValue) const { if (AdditionalTags_IsSet) return AdditionalTags_Optional; return DefaultValue; }
    bool GetAdditionalTags(TArray<FString>& OutValue) const { if (AdditionalTags_IsSet) OutValue = AdditionalTags_Optional; return AdditionalTags_IsSet; }
    TArray<FString>* GetAdditionalTagsOrNull() { if (AdditionalTags_IsSet) return &AdditionalTags_Optional; return nullptr; }
    const TArray<FString>* GetAdditionalTagsOrNull() const { if (AdditionalTags_IsSet) return &AdditionalTags_Optional; return nullptr; }
    void SetAdditionalTags(TArray<FString> NewValue) { AdditionalTags_Optional = NewValue; AdditionalTags_IsSet = true; }
    void ClearAdditionalTags() { AdditionalTags_IsSet = false; }

    /* List of map preferences in order from most desired, to least desired */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<int32> MapPreferences{  };
    TArray<int32>& GetMapPreferences() { return MapPreferences; }
    const TArray<int32>& GetMapPreferences() const { return MapPreferences; }
    void SetMapPreferences(TArray<int32> NewValue) { MapPreferences = NewValue;  }
};
