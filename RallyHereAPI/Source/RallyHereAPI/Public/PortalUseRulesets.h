/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "CacheInfo.h"
#include "PortalUseRuleset.h"
#include "PortalUseRulesets.generated.h"

/*
* FRHAPI_PortalUseRulesets
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PortalUseRulesets : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TMap<FString, FRHAPI_PortalUseRuleset> Rulesets_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Rulesets_IsSet{ false };
    TMap<FString, FRHAPI_PortalUseRuleset>& GetRulesets() { return Rulesets_Optional; }
    const TMap<FString, FRHAPI_PortalUseRuleset>& GetRulesets() const { return Rulesets_Optional; }
    const TMap<FString, FRHAPI_PortalUseRuleset>& GetRulesets(const TMap<FString, FRHAPI_PortalUseRuleset>& DefaultValue) const { if (Rulesets_IsSet) return Rulesets_Optional; return DefaultValue; }
    bool GetRulesets(TMap<FString, FRHAPI_PortalUseRuleset>& OutValue) const { if (Rulesets_IsSet) OutValue = Rulesets_Optional; return Rulesets_IsSet; }
    TMap<FString, FRHAPI_PortalUseRuleset>* GetRulesetsOrNull() { if (Rulesets_IsSet) return &Rulesets_Optional; return nullptr; }
    const TMap<FString, FRHAPI_PortalUseRuleset>* GetRulesetsOrNull() const { if (Rulesets_IsSet) return &Rulesets_Optional; return nullptr; }
    void SetRulesets(TMap<FString, FRHAPI_PortalUseRuleset> NewValue) { Rulesets_Optional = NewValue; Rulesets_IsSet = true; }
    void ClearRulesets() { Rulesets_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FRHAPI_CacheInfo CacheInfo_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CacheInfo_IsSet{ false };
    FRHAPI_CacheInfo& GetCacheInfo() { return CacheInfo_Optional; }
    const FRHAPI_CacheInfo& GetCacheInfo() const { return CacheInfo_Optional; }
    const FRHAPI_CacheInfo& GetCacheInfo(const FRHAPI_CacheInfo& DefaultValue) const { if (CacheInfo_IsSet) return CacheInfo_Optional; return DefaultValue; }
    bool GetCacheInfo(FRHAPI_CacheInfo& OutValue) const { if (CacheInfo_IsSet) OutValue = CacheInfo_Optional; return CacheInfo_IsSet; }
    FRHAPI_CacheInfo* GetCacheInfoOrNull() { if (CacheInfo_IsSet) return &CacheInfo_Optional; return nullptr; }
    const FRHAPI_CacheInfo* GetCacheInfoOrNull() const { if (CacheInfo_IsSet) return &CacheInfo_Optional; return nullptr; }
    void SetCacheInfo(FRHAPI_CacheInfo NewValue) { CacheInfo_Optional = NewValue; CacheInfo_IsSet = true; }
    void ClearCacheInfo() { CacheInfo_IsSet = false; }
};
