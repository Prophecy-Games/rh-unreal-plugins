/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "EntitlementErrorCode.h"
#include "EntitlementStatus.h"
#include "PlatformEntitlement.generated.h"

/*
* FRHAPI_PlatformEntitlement
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PlatformEntitlement : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* platform identifier for this purchase type */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString PlatformSku{  };
    FString& GetPlatformSku() { return PlatformSku; }
    const FString& GetPlatformSku() const { return PlatformSku; }
    void SetPlatformSku(FString NewValue) { PlatformSku = NewValue;  }

    /* unique identifier for this purchased item (instance owned by this user) */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString PlatformEntitlementId{  };
    FString& GetPlatformEntitlementId() { return PlatformEntitlementId; }
    const FString& GetPlatformEntitlementId() const { return PlatformEntitlementId; }
    void SetPlatformEntitlementId(FString NewValue) { PlatformEntitlementId = NewValue;  }

    /* number purchased */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 Quantity_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Quantity_IsSet{ false };
    int32& GetQuantity() { return Quantity_Optional; }
    const int32& GetQuantity() const { return Quantity_Optional; }
    const int32& GetQuantity(const int32& DefaultValue) const { if (Quantity_IsSet) return Quantity_Optional; return DefaultValue; }
    bool GetQuantity(int32& OutValue) const { if (Quantity_IsSet) OutValue = Quantity_Optional; return Quantity_IsSet; }
    int32* GetQuantityOrNull() { if (Quantity_IsSet) return &Quantity_Optional; return nullptr; }
    const int32* GetQuantityOrNull() const { if (Quantity_IsSet) return &Quantity_Optional; return nullptr; }
    void SetQuantity(int32 NewValue) { Quantity_Optional = NewValue; Quantity_IsSet = true; }
    void ClearQuantity() { Quantity_Optional = 1; Quantity_IsSet = false; }
    bool IsQuantityDefaultValue() const { return Quantity_IsSet && Quantity_Optional == 1; }
    void SetQuantityToDefault() { Quantity_Optional = 1; Quantity_IsSet = true; }

    /* status of this entitlement */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_EntitlementStatus Status_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Status_IsSet{ false };
    ERHAPI_EntitlementStatus& GetStatus() { return Status_Optional; }
    const ERHAPI_EntitlementStatus& GetStatus() const { return Status_Optional; }
    const ERHAPI_EntitlementStatus& GetStatus(const ERHAPI_EntitlementStatus& DefaultValue) const { if (Status_IsSet) return Status_Optional; return DefaultValue; }
    bool GetStatus(ERHAPI_EntitlementStatus& OutValue) const { if (Status_IsSet) OutValue = Status_Optional; return Status_IsSet; }
    ERHAPI_EntitlementStatus* GetStatusOrNull() { if (Status_IsSet) return &Status_Optional; return nullptr; }
    const ERHAPI_EntitlementStatus* GetStatusOrNull() const { if (Status_IsSet) return &Status_Optional; return nullptr; }
    void SetStatus(ERHAPI_EntitlementStatus NewValue) { Status_Optional = NewValue; Status_IsSet = true; }
    void ClearStatus() { Status_IsSet = false; }

    /* Error code for this entitlement */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_EntitlementErrorCode ErrorCode_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool ErrorCode_IsSet{ false };
    ERHAPI_EntitlementErrorCode& GetErrorCode() { return ErrorCode_Optional; }
    const ERHAPI_EntitlementErrorCode& GetErrorCode() const { return ErrorCode_Optional; }
    const ERHAPI_EntitlementErrorCode& GetErrorCode(const ERHAPI_EntitlementErrorCode& DefaultValue) const { if (ErrorCode_IsSet) return ErrorCode_Optional; return DefaultValue; }
    bool GetErrorCode(ERHAPI_EntitlementErrorCode& OutValue) const { if (ErrorCode_IsSet) OutValue = ErrorCode_Optional; return ErrorCode_IsSet; }
    ERHAPI_EntitlementErrorCode* GetErrorCodeOrNull() { if (ErrorCode_IsSet) return &ErrorCode_Optional; return nullptr; }
    const ERHAPI_EntitlementErrorCode* GetErrorCodeOrNull() const { if (ErrorCode_IsSet) return &ErrorCode_Optional; return nullptr; }
    void SetErrorCode(ERHAPI_EntitlementErrorCode NewValue) { ErrorCode_Optional = NewValue; ErrorCode_IsSet = true; }
    void ClearErrorCode() { ErrorCode_IsSet = false; }

    /* Order ID for this entitlement */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString OrderId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool OrderId_IsSet{ false };
    FString& GetOrderId() { return OrderId_Optional; }
    const FString& GetOrderId() const { return OrderId_Optional; }
    const FString& GetOrderId(const FString& DefaultValue) const { if (OrderId_IsSet) return OrderId_Optional; return DefaultValue; }
    bool GetOrderId(FString& OutValue) const { if (OrderId_IsSet) OutValue = OrderId_Optional; return OrderId_IsSet; }
    FString* GetOrderIdOrNull() { if (OrderId_IsSet) return &OrderId_Optional; return nullptr; }
    const FString* GetOrderIdOrNull() const { if (OrderId_IsSet) return &OrderId_Optional; return nullptr; }
    void SetOrderId(FString NewValue) { OrderId_Optional = NewValue; OrderId_IsSet = true; }
    void ClearOrderId() { OrderId_IsSet = false; }
};
