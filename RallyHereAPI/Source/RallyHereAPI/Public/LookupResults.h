/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "PlatformIdentityLookupResults.h"
#include "PlayerResponse.h"
#include "LookupResults.generated.h"

/*
* FRHAPI_LookupResults
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_LookupResults : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>> DisplayNames_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool DisplayNames_IsSet{ false };
    TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>>& GetDisplayNames() { return DisplayNames_Optional; }
    const TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>>& GetDisplayNames() const { return DisplayNames_Optional; }
    const TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>>& GetDisplayNames(const TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>>& DefaultValue) const { if (DisplayNames_IsSet) return DisplayNames_Optional; return DefaultValue; }
    bool GetDisplayNames(TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>>& OutValue) const { if (DisplayNames_IsSet) OutValue = DisplayNames_Optional; return DisplayNames_IsSet; }
    TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>>* GetDisplayNamesOrNull() { if (DisplayNames_IsSet) return &DisplayNames_Optional; return nullptr; }
    const TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>>* GetDisplayNamesOrNull() const { if (DisplayNames_IsSet) return &DisplayNames_Optional; return nullptr; }
    void SetDisplayNames(TArray<TMap<FString, TArray<FRHAPI_PlayerResponse>>> NewValue) { DisplayNames_Optional = NewValue; DisplayNames_IsSet = true; }
    void ClearDisplayNames() { DisplayNames_IsSet = false; }

    TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>> IdentityPlatforms_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool IdentityPlatforms_IsSet{ false };
    TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>>& GetIdentityPlatforms() { return IdentityPlatforms_Optional; }
    const TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>>& GetIdentityPlatforms() const { return IdentityPlatforms_Optional; }
    const TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>>& GetIdentityPlatforms(const TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>>& DefaultValue) const { if (IdentityPlatforms_IsSet) return IdentityPlatforms_Optional; return DefaultValue; }
    bool GetIdentityPlatforms(TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>>& OutValue) const { if (IdentityPlatforms_IsSet) OutValue = IdentityPlatforms_Optional; return IdentityPlatforms_IsSet; }
    TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>>* GetIdentityPlatformsOrNull() { if (IdentityPlatforms_IsSet) return &IdentityPlatforms_Optional; return nullptr; }
    const TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>>* GetIdentityPlatformsOrNull() const { if (IdentityPlatforms_IsSet) return &IdentityPlatforms_Optional; return nullptr; }
    void SetIdentityPlatforms(TMap<FString, TArray<FRHAPI_PlatformIdentityLookupResults>> NewValue) { IdentityPlatforms_Optional = NewValue; IdentityPlatforms_IsSet = true; }
    void ClearIdentityPlatforms() { IdentityPlatforms_IsSet = false; }
};
