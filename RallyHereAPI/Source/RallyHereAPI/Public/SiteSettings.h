/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "SiteSettings.generated.h"

/*
* FRHAPI_SiteSettings
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_SiteSettings : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 SiteId{ 0 };
    int32& GetSiteId() { return SiteId; }
    const int32& GetSiteId() const { return SiteId; }
    void SetSiteId(int32 NewValue) { SiteId = NewValue;  }
    bool IsSiteIdDefaultValue() const { return SiteId == 0; }
    void SetSiteIdToDefault() { SiteId = 0;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 SortOrder{ 0 };
    int32& GetSortOrder() { return SortOrder; }
    const int32& GetSortOrder() const { return SortOrder; }
    void SetSortOrder(int32 NewValue) { SortOrder = NewValue;  }
    bool IsSortOrderDefaultValue() const { return SortOrder == 0; }
    void SetSortOrderToDefault() { SortOrder = 0;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool CustomOnly{ false };
    bool& GetCustomOnly() { return CustomOnly; }
    const bool& GetCustomOnly() const { return CustomOnly; }
    void SetCustomOnly(bool NewValue) { CustomOnly = NewValue;  }
    bool IsCustomOnlyDefaultValue() const { return CustomOnly == false; }
    void SetCustomOnlyToDefault() { CustomOnly = false;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString MessageName_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool MessageName_IsSet{ false };
    FString& GetMessageName() { return MessageName_Optional; }
    const FString& GetMessageName() const { return MessageName_Optional; }
    const FString& GetMessageName(const FString& DefaultValue) const { if (MessageName_IsSet) return MessageName_Optional; return DefaultValue; }
    bool GetMessageName(FString& OutValue) const { if (MessageName_IsSet) OutValue = MessageName_Optional; return MessageName_IsSet; }
    FString* GetMessageNameOrNull() { if (MessageName_IsSet) return &MessageName_Optional; return nullptr; }
    const FString* GetMessageNameOrNull() const { if (MessageName_IsSet) return &MessageName_Optional; return nullptr; }
    void SetMessageName(FString NewValue) { MessageName_Optional = NewValue; MessageName_IsSet = true; }
    void ClearMessageName() { MessageName_IsSet = false; }
};
