// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "Operation.h"
#include "Rule.generated.h"

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_Rule : public FRHAPI_Model
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief Comparison operation to be performed */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_Operation Operation{  };
    /** @brief Gets the value of Operation */
    ERHAPI_Operation& GetOperation() { return Operation; }
    /** @brief Gets the value of Operation */
    const ERHAPI_Operation& GetOperation() const { return Operation; }
    /** @brief Sets the value of Operation */
    void SetOperation(ERHAPI_Operation NewValue) { Operation = NewValue;  }

    /** @brief Value to compare to */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 Value{ 0 };
    /** @brief Gets the value of Value */
    int32& GetValue() { return Value; }
    /** @brief Gets the value of Value */
    const int32& GetValue() const { return Value; }
    /** @brief Sets the value of Value */
    void SetValue(int32 NewValue) { Value = NewValue;  }
    /** @brief Returns true if Value matches the default value */
    bool IsValueDefaultValue() const { return Value == 0; }
    /** @brief Sets the value of Value to its default  */
    void SetValueToDefault() { Value = 0;  }
};
