/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "PortalUserResponse.generated.h"

/*
* FRHAPI_PortalUserResponse
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_PortalUserResponse : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString PortalUserId_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool PortalUserId_IsSet{ false };
    FString& GetPortalUserId() { return PortalUserId_Optional; }
    const FString& GetPortalUserId() const { return PortalUserId_Optional; }
    const FString& GetPortalUserId(const FString& DefaultValue) const { if (PortalUserId_IsSet) return PortalUserId_Optional; return DefaultValue; }
    bool GetPortalUserId(FString& OutValue) const { if (PortalUserId_IsSet) OutValue = PortalUserId_Optional; return PortalUserId_IsSet; }
    FString* GetPortalUserIdOrNull() { if (PortalUserId_IsSet) return &PortalUserId_Optional; return nullptr; }
    const FString* GetPortalUserIdOrNull() const { if (PortalUserId_IsSet) return &PortalUserId_Optional; return nullptr; }
    void SetPortalUserId(FString NewValue) { PortalUserId_Optional = NewValue; PortalUserId_IsSet = true; }
    void ClearPortalUserId() { PortalUserId_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 PortalId{ 0 };
    int32& GetPortalId() { return PortalId; }
    const int32& GetPortalId() const { return PortalId; }
    void SetPortalId(int32 NewValue) { PortalId = NewValue;  }
    bool IsPortalIdDefaultValue() const { return PortalId == 0; }
    void SetPortalIdToDefault() { PortalId = 0;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString DisplayName_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool DisplayName_IsSet{ false };
    FString& GetDisplayName() { return DisplayName_Optional; }
    const FString& GetDisplayName() const { return DisplayName_Optional; }
    const FString& GetDisplayName(const FString& DefaultValue) const { if (DisplayName_IsSet) return DisplayName_Optional; return DefaultValue; }
    bool GetDisplayName(FString& OutValue) const { if (DisplayName_IsSet) OutValue = DisplayName_Optional; return DisplayName_IsSet; }
    FString* GetDisplayNameOrNull() { if (DisplayName_IsSet) return &DisplayName_Optional; return nullptr; }
    const FString* GetDisplayNameOrNull() const { if (DisplayName_IsSet) return &DisplayName_Optional; return nullptr; }
    void SetDisplayName(FString NewValue) { DisplayName_Optional = NewValue; DisplayName_IsSet = true; }
    void ClearDisplayName() { DisplayName_IsSet = false; }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 PlayerId{ 0 };
    int32& GetPlayerId() { return PlayerId; }
    const int32& GetPlayerId() const { return PlayerId; }
    void SetPlayerId(int32 NewValue) { PlayerId = NewValue;  }
    bool IsPlayerIdDefaultValue() const { return PlayerId == 0; }
    void SetPlayerIdToDefault() { PlayerId = 0;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString PlayerUuid{  };
    FString& GetPlayerUuid() { return PlayerUuid; }
    const FString& GetPlayerUuid() const { return PlayerUuid; }
    void SetPlayerUuid(FString NewValue) { PlayerUuid = NewValue;  }
};
