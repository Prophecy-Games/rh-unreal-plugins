/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "MMRGroupingMethod.h"
#include "MatchMakingProfile.h"
#include "Ruleset.h"
#include "MatchMakingTemplate.generated.h"

/*
* FRHAPI_MatchMakingTemplate
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_MatchMakingTemplate : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* What method should be used to calculate a group's MMR based on the individual player's ranks */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    ERHAPI_MMRGroupingMethod MmrGroupMethod{  };
    ERHAPI_MMRGroupingMethod& GetMmrGroupMethod() { return MmrGroupMethod; }
    const ERHAPI_MMRGroupingMethod& GetMmrGroupMethod() const { return MmrGroupMethod; }
    void SetMmrGroupMethod(ERHAPI_MMRGroupingMethod NewValue) { MmrGroupMethod = NewValue;  }

    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FRHAPI_Ruleset Ruleset_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool Ruleset_IsSet{ false };
    FRHAPI_Ruleset& GetRuleset() { return Ruleset_Optional; }
    const FRHAPI_Ruleset& GetRuleset() const { return Ruleset_Optional; }
    const FRHAPI_Ruleset& GetRuleset(const FRHAPI_Ruleset& DefaultValue) const { if (Ruleset_IsSet) return Ruleset_Optional; return DefaultValue; }
    bool GetRuleset(FRHAPI_Ruleset& OutValue) const { if (Ruleset_IsSet) OutValue = Ruleset_Optional; return Ruleset_IsSet; }
    FRHAPI_Ruleset* GetRulesetOrNull() { if (Ruleset_IsSet) return &Ruleset_Optional; return nullptr; }
    const FRHAPI_Ruleset* GetRulesetOrNull() const { if (Ruleset_IsSet) return &Ruleset_Optional; return nullptr; }
    void SetRuleset(FRHAPI_Ruleset NewValue) { Ruleset_Optional = NewValue; Ruleset_IsSet = true; }
    void ClearRuleset() { Ruleset_IsSet = false; }

    /* A list of which match making profiles are going to be created on the ticket */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FRHAPI_MatchMakingProfile> Profiles{  };
    TArray<FRHAPI_MatchMakingProfile>& GetProfiles() { return Profiles; }
    const TArray<FRHAPI_MatchMakingProfile>& GetProfiles() const { return Profiles; }
    void SetProfiles(TArray<FRHAPI_MatchMakingProfile> NewValue) { Profiles = NewValue;  }
};
