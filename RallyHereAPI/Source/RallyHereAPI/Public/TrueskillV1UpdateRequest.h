// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "TrueskillV1Team.h"
#include "TrueskillV1UpdateRequest.generated.h"

/**
 * @brief 
 */
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_TrueskillV1UpdateRequest : public FRHAPI_Model
{
    GENERATED_BODY()

    /**
    * @brief Fills this object with data from the passed in JSON
    *
    * @param [in] JsonValue Data from the API call.
    *
    * @return true if parsing of the JSON data was successful.
    */
    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;

    /**
    * @brief Writes the data from this object into the specified JSON Writer stream
    *
    * @param [in] Writer JSON Writer stream to push .
    */
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /** @brief ID for the instance the match took place on */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString InstanceId{  };
    /** @brief Gets the value of InstanceId */
    FString& GetInstanceId() { return InstanceId; }
    /** @brief Gets the value of InstanceId */
    const FString& GetInstanceId() const { return InstanceId; }
    /** @brief Sets the value of InstanceId */
    void SetInstanceId(FString NewValue) { InstanceId = NewValue;  }

    /** @brief ID for the rank type used in this match */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 RankingType{ 0 };
    /** @brief Gets the value of RankingType */
    int32& GetRankingType() { return RankingType; }
    /** @brief Gets the value of RankingType */
    const int32& GetRankingType() const { return RankingType; }
    /** @brief Sets the value of RankingType */
    void SetRankingType(int32 NewValue) { RankingType = NewValue;  }
    /** @brief Returns true if RankingType matches the default value */
    bool IsRankingTypeDefaultValue() const { return RankingType == 0; }
    /** @brief Sets the value of RankingType to its default  */
    void SetRankingTypeToDefault() { RankingType = 0;  }

    /** @brief How many seconds the match lasted */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    int32 MatchLengthSeconds{ 0 };
    /** @brief Gets the value of MatchLengthSeconds */
    int32& GetMatchLengthSeconds() { return MatchLengthSeconds; }
    /** @brief Gets the value of MatchLengthSeconds */
    const int32& GetMatchLengthSeconds() const { return MatchLengthSeconds; }
    /** @brief Sets the value of MatchLengthSeconds */
    void SetMatchLengthSeconds(int32 NewValue) { MatchLengthSeconds = NewValue;  }
    /** @brief Returns true if MatchLengthSeconds matches the default value */
    bool IsMatchLengthSecondsDefaultValue() const { return MatchLengthSeconds == 0; }
    /** @brief Sets the value of MatchLengthSeconds to its default  */
    void SetMatchLengthSecondsToDefault() { MatchLengthSeconds = 0;  }

    /** @brief List of teams that participated in this match */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TArray<FRHAPI_TrueskillV1Team> Teams{  };
    /** @brief Gets the value of Teams */
    TArray<FRHAPI_TrueskillV1Team>& GetTeams() { return Teams; }
    /** @brief Gets the value of Teams */
    const TArray<FRHAPI_TrueskillV1Team>& GetTeams() const { return Teams; }
    /** @brief Sets the value of Teams */
    void SetTeams(TArray<FRHAPI_TrueskillV1Team> NewValue) { Teams = NewValue;  }
};
