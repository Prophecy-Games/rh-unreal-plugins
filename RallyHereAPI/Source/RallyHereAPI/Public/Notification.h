/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */

#pragma once

#include "RallyHereAPIBaseModel.h"
#include "RallyHereAPIHelpers.h"
#include "Notification.generated.h"

/*
* FRHAPI_Notification
*
* 
*/
USTRUCT(BlueprintType)
struct RALLYHEREAPI_API FRHAPI_Notification : public FRHAPI_Model
{
    GENERATED_BODY()

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override final;
    void WriteJson(TSharedRef<TJsonWriter<>>& Writer) const override final;

    /* Base Message for the notification */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString Message{  };
    FString& GetMessage() { return Message; }
    const FString& GetMessage() const { return Message; }
    void SetMessage(FString NewValue) { Message = NewValue;  }

    /* Path to get additional data about this notification */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString RhUrl_Optional{  };
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    bool RhUrl_IsSet{ false };
    FString& GetRhUrl() { return RhUrl_Optional; }
    const FString& GetRhUrl() const { return RhUrl_Optional; }
    const FString& GetRhUrl(const FString& DefaultValue) const { if (RhUrl_IsSet) return RhUrl_Optional; return DefaultValue; }
    bool GetRhUrl(FString& OutValue) const { if (RhUrl_IsSet) OutValue = RhUrl_Optional; return RhUrl_IsSet; }
    FString* GetRhUrlOrNull() { if (RhUrl_IsSet) return &RhUrl_Optional; return nullptr; }
    const FString* GetRhUrlOrNull() const { if (RhUrl_IsSet) return &RhUrl_Optional; return nullptr; }
    void SetRhUrl(FString NewValue) { RhUrl_Optional = NewValue; RhUrl_IsSet = true; }
    void ClearRhUrl() { RhUrl_IsSet = false; }

    /* Custom values for the notification */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    TMap<FString, FString> CustomData{  };
    TMap<FString, FString>& GetCustomData() { return CustomData; }
    const TMap<FString, FString>& GetCustomData() const { return CustomData; }
    void SetCustomData(TMap<FString, FString> NewValue) { CustomData = NewValue;  }

    /* Unique Identifier for the notification.  You cannot depend on the format of this string, and it must be considered opaque */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FString NotificationId{  };
    FString& GetNotificationId() { return NotificationId; }
    const FString& GetNotificationId() const { return NotificationId; }
    void SetNotificationId(FString NewValue) { NotificationId = NewValue;  }

    /* When this notification was added */
    UPROPERTY(BlueprintReadOnly, Category = "RallyHere")
    FDateTime Created{  };
    FDateTime& GetCreated() { return Created; }
    const FDateTime& GetCreated() const { return Created; }
    void SetCreated(FDateTime NewValue) { Created = NewValue;  }
};
