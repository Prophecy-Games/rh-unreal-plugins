/**
 * NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
 * Do not edit the file manually.
 *
 * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
 * Copyright 2022 HiRez Studios
 * SPDX-License-Identifier: Apache-2.0
 *
 * Rally Here APIs
 * version: 0.1.0
 * Rally Here APIs
 */


#include "Catalog.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_Catalog

void FRHAPI_Catalog::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    if (XpTables_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("xp_tables"));
        RallyHereAPI::WriteJsonValue(Writer, XpTables_Optional);
    }
    if (PortalUseRulesets_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("portal_use_rulesets"));
        RallyHereAPI::WriteJsonValue(Writer, PortalUseRulesets_Optional);
    }
    if (InventoryBucketUseRuleSets_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("inventory_bucket_use_rule_sets"));
        RallyHereAPI::WriteJsonValue(Writer, InventoryBucketUseRuleSets_Optional);
    }
    if (Vendors_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("vendors"));
        RallyHereAPI::WriteJsonValue(Writer, Vendors_Optional);
    }
    if (Loot_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("loot"));
        RallyHereAPI::WriteJsonValue(Writer, Loot_Optional);
    }
    if (Items_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("items"));
        RallyHereAPI::WriteJsonValue(Writer, Items_Optional);
    }
    if (PricePoints_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("price_points"));
        RallyHereAPI::WriteJsonValue(Writer, PricePoints_Optional);
    }
    if (TimeFrames_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("time_frames"));
        RallyHereAPI::WriteJsonValue(Writer, TimeFrames_Optional);
    }
    if (CacheInfo_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("cache_info"));
        RallyHereAPI::WriteJsonValue(Writer, CacheInfo_Optional);
    }
    Writer->WriteObjectEnd();
}

bool FRHAPI_Catalog::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    if ((*Object)->HasField(TEXT("xp_tables")))
    {
        XpTables_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("xp_tables"), XpTables_Optional);
        ParseSuccess &= XpTables_IsSet;
    }
    if ((*Object)->HasField(TEXT("portal_use_rulesets")))
    {
        PortalUseRulesets_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("portal_use_rulesets"), PortalUseRulesets_Optional);
        ParseSuccess &= PortalUseRulesets_IsSet;
    }
    if ((*Object)->HasField(TEXT("inventory_bucket_use_rule_sets")))
    {
        InventoryBucketUseRuleSets_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("inventory_bucket_use_rule_sets"), InventoryBucketUseRuleSets_Optional);
        ParseSuccess &= InventoryBucketUseRuleSets_IsSet;
    }
    if ((*Object)->HasField(TEXT("vendors")))
    {
        Vendors_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("vendors"), Vendors_Optional);
        ParseSuccess &= Vendors_IsSet;
    }
    if ((*Object)->HasField(TEXT("loot")))
    {
        Loot_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("loot"), Loot_Optional);
        ParseSuccess &= Loot_IsSet;
    }
    if ((*Object)->HasField(TEXT("items")))
    {
        Items_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("items"), Items_Optional);
        ParseSuccess &= Items_IsSet;
    }
    if ((*Object)->HasField(TEXT("price_points")))
    {
        PricePoints_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("price_points"), PricePoints_Optional);
        ParseSuccess &= PricePoints_IsSet;
    }
    if ((*Object)->HasField(TEXT("time_frames")))
    {
        TimeFrames_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("time_frames"), TimeFrames_Optional);
        ParseSuccess &= TimeFrames_IsSet;
    }
    if ((*Object)->HasField(TEXT("cache_info")))
    {
        CacheInfo_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("cache_info"), CacheInfo_Optional);
        ParseSuccess &= CacheInfo_IsSet;
    }

    return ParseSuccess;
}

