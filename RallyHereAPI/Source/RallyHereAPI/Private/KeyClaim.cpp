// NOTE: This file is auto generated by https://github.com/hirezstudios/rally-here-api-generator
// Do not edit the file manually.
//
// Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)
// Copyright 2023 RallyHere Interactive
// SPDX-License-Identifier: Apache-2.0


#include "KeyClaim.h"
#include "RallyHereAPIModule.h"
#include "RallyHereAPIHelpers.h"
#include "Templates/SharedPointer.h"


using RallyHereAPI::ToStringFormatArg;
using RallyHereAPI::WriteJsonValue;
using RallyHereAPI::TryGetJsonValue;

////////////////////////////////////////////////////
// Implementation for FRHAPI_KeyClaim

void FRHAPI_KeyClaim::WriteJson(TSharedRef<TJsonWriter<>>& Writer) const
{
    Writer->WriteObjectStart();
    if (PortalId_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("portal_id"));
        RallyHereAPI::WriteJsonValue(Writer, EnumToString(PortalId_Optional));
    }
    if (PortalUserId_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("portal_user_id"));
        RallyHereAPI::WriteJsonValue(Writer, PortalUserId_Optional);
    }
    Writer->WriteIdentifierPrefix(TEXT("key_claim_uuid"));
    RallyHereAPI::WriteJsonValue(Writer, KeyClaimUuid);
    if (Claimed_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("claimed"));
        RallyHereAPI::WriteJsonValue(Writer, Claimed_Optional);
    }
    if (ExternalKey_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("external_key"));
        RallyHereAPI::WriteJsonValue(Writer, ExternalKey_Optional);
    }
    if (ExternalKeyCampaignUuid_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("external_key_campaign_uuid"));
        RallyHereAPI::WriteJsonValue(Writer, ExternalKeyCampaignUuid_Optional);
    }
    if (ExternalKeyType_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("external_key_type"));
        RallyHereAPI::WriteJsonValue(Writer, ExternalKeyType_Optional);
    }
    if (CreatedOn_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("created_on"));
        RallyHereAPI::WriteJsonValue(Writer, CreatedOn_Optional);
    }
    if (LastModifiedOn_IsSet)
    {
        Writer->WriteIdentifierPrefix(TEXT("last_modified_on"));
        RallyHereAPI::WriteJsonValue(Writer, LastModifiedOn_Optional);
    }
    Writer->WriteObjectEnd();
}

bool FRHAPI_KeyClaim::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
    const TSharedPtr<FJsonObject>* Object;
    if (!JsonValue->TryGetObject(Object))
        return false;

    bool ParseSuccess = true;

    if ((*Object)->HasField(TEXT("portal_id")))
    {
        PortalId_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("portal_id"), PortalId_Optional);
        ParseSuccess &= PortalId_IsSet;
    }
    if ((*Object)->HasField(TEXT("portal_user_id")))
    {
        PortalUserId_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("portal_user_id"), PortalUserId_Optional);
        ParseSuccess &= PortalUserId_IsSet;
    }
    ParseSuccess &= RallyHereAPI::TryGetJsonValue(*Object, TEXT("key_claim_uuid"), KeyClaimUuid);
    if ((*Object)->HasField(TEXT("claimed")))
    {
        Claimed_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("claimed"), Claimed_Optional);
        ParseSuccess &= Claimed_IsSet;
    }
    if ((*Object)->HasField(TEXT("external_key")))
    {
        ExternalKey_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("external_key"), ExternalKey_Optional);
        ParseSuccess &= ExternalKey_IsSet;
    }
    if ((*Object)->HasField(TEXT("external_key_campaign_uuid")))
    {
        ExternalKeyCampaignUuid_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("external_key_campaign_uuid"), ExternalKeyCampaignUuid_Optional);
        ParseSuccess &= ExternalKeyCampaignUuid_IsSet;
    }
    if ((*Object)->HasField(TEXT("external_key_type")))
    {
        ExternalKeyType_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("external_key_type"), ExternalKeyType_Optional);
        ParseSuccess &= ExternalKeyType_IsSet;
    }
    if ((*Object)->HasField(TEXT("created_on")))
    {
        CreatedOn_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("created_on"), CreatedOn_Optional);
        ParseSuccess &= CreatedOn_IsSet;
    }
    if ((*Object)->HasField(TEXT("last_modified_on")))
    {
        LastModifiedOn_IsSet = RallyHereAPI::TryGetJsonValue(*Object, TEXT("last_modified_on"), LastModifiedOn_Optional);
        ParseSuccess &= LastModifiedOn_IsSet;
    }

    return ParseSuccess;
}

